// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const SCHEMA = 57561
const TABLE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const KEY_BLOCK_SIZE = 57572
const CHECK = 57573
const INDEXES = 57574
const ACTION = 57575
const CASCADE = 57576
const CONSTRAINT = 57577
const FOREIGN = 57578
const NO = 57579
const REFERENCES = 57580
const RESTRICT = 57581
const SHOW = 57582
const DESCRIBE = 57583
const EXPLAIN = 57584
const DATE = 57585
const ESCAPE = 57586
const REPAIR = 57587
const OPTIMIZE = 57588
const TRUNCATE = 57589
const COALESCE = 57590
const EXCHANGE = 57591
const REBUILD = 57592
const PARTITIONING = 57593
const REMOVE = 57594
const PREPARE = 57595
const EXECUTE = 57596
const MAXVALUE = 57597
const PARTITION = 57598
const REORGANIZE = 57599
const LESS = 57600
const THAN = 57601
const PROCEDURE = 57602
const TRIGGER = 57603
const VINDEX = 57604
const VINDEXES = 57605
const DIRECTORY = 57606
const NAME = 57607
const UPGRADE = 57608
const STATUS = 57609
const VARIABLES = 57610
const WARNINGS = 57611
const CASCADED = 57612
const DEFINER = 57613
const OPTION = 57614
const SQL = 57615
const UNDEFINED = 57616
const SEQUENCE = 57617
const MERGE = 57618
const TEMPORARY = 57619
const TEMPTABLE = 57620
const INVOKER = 57621
const SECURITY = 57622
const FIRST = 57623
const AFTER = 57624
const LAST = 57625
const VITESS_MIGRATION = 57626
const CANCEL = 57627
const RETRY = 57628
const LAUNCH = 57629
const COMPLETE = 57630
const CLEANUP = 57631
const THROTTLE = 57632
const UNTHROTTLE = 57633
const EXPIRE = 57634
const RATIO = 57635
const BEGIN = 57636
const START = 57637
const TRANSACTION = 57638
const COMMIT = 57639
const ROLLBACK = 57640
const SAVEPOINT = 57641
const RELEASE = 57642
const WORK = 57643
const BIT = 57644
const TINYINT = 57645
const SMALLINT = 57646
const MEDIUMINT = 57647
const INT = 57648
const INTEGER = 57649
const BIGINT = 57650
const INTNUM = 57651
const REAL = 57652
const DOUBLE = 57653
const FLOAT_TYPE = 57654
const DECIMAL_TYPE = 57655
const NUMERIC = 57656
const TIME = 57657
const TIMESTAMP = 57658
const DATETIME = 57659
const YEAR = 57660
const CHAR = 57661
const VARCHAR = 57662
const BOOL = 57663
const CHARACTER = 57664
const VARBINARY = 57665
const NCHAR = 57666
const TEXT = 57667
const TINYTEXT = 57668
const MEDIUMTEXT = 57669
const LONGTEXT = 57670
const BLOB = 57671
const TINYBLOB = 57672
const MEDIUMBLOB = 57673
const LONGBLOB = 57674
const JSON = 57675
const JSON_SCHEMA_VALID = 57676
const JSON_SCHEMA_VALIDATION_REPORT = 57677
const ENUM = 57678
const GEOMETRY = 57679
const POINT = 57680
const LINESTRING = 57681
const POLYGON = 57682
const GEOMCOLLECTION = 57683
const GEOMETRYCOLLECTION = 57684
const MULTIPOINT = 57685
const MULTILINESTRING = 57686
const MULTIPOLYGON = 57687
const ASCII = 57688
const UNICODE = 57689
const NULLX = 57690
const AUTO_INCREMENT = 57691
const APPROXNUM = 57692
const SIGNED = 57693
const UNSIGNED = 57694
const ZEROFILL = 57695
const CODE = 57696
const COLLATION = 57697
const COLUMNS = 57698
const DATABASES = 57699
const ENGINES = 57700
const EVENT = 57701
const EXTENDED = 57702
const FIELDS = 57703
const FULL = 57704
const FUNCTION = 57705
const GTID_EXECUTED = 57706
const KEYSPACES = 57707
const OPEN = 57708
const PLUGINS = 57709
const PRIVILEGES = 57710
const PROCESSLIST = 57711
const SCHEMAS = 57712
const TABLES = 57713
const TRIGGERS = 57714
const USER = 57715
const VGTID_EXECUTED = 57716
const VITESS_KEYSPACES = 57717
const VITESS_METADATA = 57718
const VITESS_MIGRATIONS = 57719
const VITESS_REPLICATION_STATUS = 57720
const VITESS_SHARDS = 57721
const VITESS_TABLETS = 57722
const VITESS_TARGET = 57723
const VSCHEMA = 57724
const VITESS_THROTTLED_APPS = 57725
const NAMES = 57726
const GLOBAL = 57727
const SESSION = 57728
const ISOLATION = 57729
const LEVEL = 57730
const READ = 57731
const WRITE = 57732
const ONLY = 57733
const REPEATABLE = 57734
const COMMITTED = 57735
const UNCOMMITTED = 57736
const SERIALIZABLE = 57737
const CURRENT_TIMESTAMP = 57738
const DATABASE = 57739
const CURRENT_DATE = 57740
const NOW = 57741
const CURRENT_TIME = 57742
const LOCALTIME = 57743
const LOCALTIMESTAMP = 57744
const CURRENT_USER = 57745
const UTC_DATE = 57746
const UTC_TIME = 57747
const UTC_TIMESTAMP = 57748
const DAY = 57749
const DAY_HOUR = 57750
const DAY_MICROSECOND = 57751
const DAY_MINUTE = 57752
const DAY_SECOND = 57753
const HOUR = 57754
const HOUR_MICROSECOND = 57755
const HOUR_MINUTE = 57756
const HOUR_SECOND = 57757
const MICROSECOND = 57758
const MINUTE = 57759
const MINUTE_MICROSECOND = 57760
const MINUTE_SECOND = 57761
const MONTH = 57762
const QUARTER = 57763
const SECOND = 57764
const SECOND_MICROSECOND = 57765
const YEAR_MONTH = 57766
const WEEK = 57767
const REPLACE = 57768
const CONVERT = 57769
const CAST = 57770
const SUBSTR = 57771
const SUBSTRING = 57772
const SEPARATOR = 57773
const TIMESTAMPADD = 57774
const TIMESTAMPDIFF = 57775
const WEIGHT_STRING = 57776
const LTRIM = 57777
const RTRIM = 57778
const TRIM = 57779
const JSON_ARRAY = 57780
const JSON_OBJECT = 57781
const JSON_QUOTE = 57782
const JSON_DEPTH = 57783
const JSON_TYPE = 57784
const JSON_LENGTH = 57785
const JSON_VALID = 57786
const JSON_ARRAY_APPEND = 57787
const JSON_ARRAY_INSERT = 57788
const JSON_INSERT = 57789
const JSON_MERGE = 57790
const JSON_MERGE_PATCH = 57791
const JSON_MERGE_PRESERVE = 57792
const JSON_REMOVE = 57793
const JSON_REPLACE = 57794
const JSON_SET = 57795
const JSON_UNQUOTE = 57796
const COUNT = 57797
const AVG = 57798
const MAX = 57799
const MIN = 57800
const SUM = 57801
const GROUP_CONCAT = 57802
const BIT_AND = 57803
const BIT_OR = 57804
const BIT_XOR = 57805
const STD = 57806
const STDDEV = 57807
const STDDEV_POP = 57808
const STDDEV_SAMP = 57809
const VAR_POP = 57810
const VAR_SAMP = 57811
const VARIANCE = 57812
const REGEXP_INSTR = 57813
const REGEXP_LIKE = 57814
const REGEXP_REPLACE = 57815
const REGEXP_SUBSTR = 57816
const ExtractValue = 57817
const UpdateXML = 57818
const GET_LOCK = 57819
const RELEASE_LOCK = 57820
const RELEASE_ALL_LOCKS = 57821
const IS_FREE_LOCK = 57822
const IS_USED_LOCK = 57823
const LOCATE = 57824
const POSITION = 57825
const MATCH = 57826
const AGAINST = 57827
const BOOLEAN = 57828
const LANGUAGE = 57829
const WITH = 57830
const QUERY = 57831
const EXPANSION = 57832
const WITHOUT = 57833
const VALIDATION = 57834
const UNUSED = 57835
const ARRAY = 57836
const BYTE = 57837
const CUME_DIST = 57838
const DESCRIPTION = 57839
const DENSE_RANK = 57840
const EMPTY = 57841
const EXCEPT = 57842
const FIRST_VALUE = 57843
const GROUPING = 57844
const GROUPS = 57845
const JSON_TABLE = 57846
const LAG = 57847
const LAST_VALUE = 57848
const LATERAL = 57849
const LEAD = 57850
const NTH_VALUE = 57851
const NTILE = 57852
const OF = 57853
const OVER = 57854
const PERCENT_RANK = 57855
const RANK = 57856
const RECURSIVE = 57857
const ROW_NUMBER = 57858
const SYSTEM = 57859
const WINDOW = 57860
const ACTIVE = 57861
const ADMIN = 57862
const AUTOEXTEND_SIZE = 57863
const BUCKETS = 57864
const CLONE = 57865
const COLUMN_FORMAT = 57866
const COMPONENT = 57867
const DEFINITION = 57868
const ENFORCED = 57869
const ENGINE_ATTRIBUTE = 57870
const EXCLUDE = 57871
const FOLLOWING = 57872
const GET_MASTER_PUBLIC_KEY = 57873
const HISTOGRAM = 57874
const HISTORY = 57875
const INACTIVE = 57876
const INVISIBLE = 57877
const LOCKED = 57878
const MASTER_COMPRESSION_ALGORITHMS = 57879
const MASTER_PUBLIC_KEY_PATH = 57880
const MASTER_TLS_CIPHERSUITES = 57881
const MASTER_ZSTD_COMPRESSION_LEVEL = 57882
const NESTED = 57883
const NETWORK_NAMESPACE = 57884
const NOWAIT = 57885
const NULLS = 57886
const OJ = 57887
const OLD = 57888
const OPTIONAL = 57889
const ORDINALITY = 57890
const ORGANIZATION = 57891
const OTHERS = 57892
const PARTIAL = 57893
const PATH = 57894
const PERSIST = 57895
const PERSIST_ONLY = 57896
const PRECEDING = 57897
const PRIVILEGE_CHECKS_USER = 57898
const PROCESS = 57899
const RANDOM = 57900
const REFERENCE = 57901
const REQUIRE_ROW_FORMAT = 57902
const RESOURCE = 57903
const RESPECT = 57904
const RESTART = 57905
const RETAIN = 57906
const REUSE = 57907
const ROLE = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_ENGINE_ATTRIBUTE = 57911
const SECONDARY_LOAD = 57912
const SECONDARY_UNLOAD = 57913
const SIMPLE = 57914
const SKIP = 57915
const SRID = 57916
const THREAD_PRIORITY = 57917
const TIES = 57918
const UNBOUNDED = 57919
const VCPU = 57920
const VISIBLE = 57921
const RETURNING = 57922
const FORMAT_BYTES = 57923
const FORMAT_PICO_TIME = 57924
const PS_CURRENT_THREAD_ID = 57925
const PS_THREAD_ID = 57926
const GTID_SUBSET = 57927
const GTID_SUBTRACT = 57928
const WAIT_FOR_EXECUTED_GTID_SET = 57929
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57930
const FORMAT = 57931
const TREE = 57932
const VITESS = 57933
const TRADITIONAL = 57934
const VTEXPLAIN = 57935
const LOCAL = 57936
const LOW_PRIORITY = 57937
const NO_WRITE_TO_BINLOG = 57938
const LOGS = 57939
const ERROR = 57940
const GENERAL = 57941
const HOSTS = 57942
const OPTIMIZER_COSTS = 57943
const USER_RESOURCES = 57944
const SLOW = 57945
const CHANNEL = 57946
const RELAY = 57947
const EXPORT = 57948
const CURRENT = 57949
const ROW = 57950
const ROWS = 57951
const AVG_ROW_LENGTH = 57952
const CONNECTION = 57953
const CHECKSUM = 57954
const DELAY_KEY_WRITE = 57955
const ENCRYPTION = 57956
const ENGINE = 57957
const INSERT_METHOD = 57958
const MAX_ROWS = 57959
const MIN_ROWS = 57960
const PACK_KEYS = 57961
const PASSWORD = 57962
const FIXED = 57963
const DYNAMIC = 57964
const COMPRESSED = 57965
const REDUNDANT = 57966
const COMPACT = 57967
const ROW_FORMAT = 57968
const STATS_AUTO_RECALC = 57969
const STATS_PERSISTENT = 57970
const STATS_SAMPLE_PAGES = 57971
const STORAGE = 57972
const MEMORY = 57973
const DISK = 57974
const PARTITIONS = 57975
const LINEAR = 57976
const RANGE = 57977
const LIST = 57978
const SUBPARTITION = 57979
const SUBPARTITIONS = 57980
const HASH = 57981

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 48,
	14, 48,
	-2, 37,
	-1, 49,
	1, 147,
	657, 147,
	-2, 155,
	-1, 50,
	135, 155,
	176, 155,
	339, 155,
	-2, 506,
	-1, 57,
	36, 752,
	238, 752,
	249, 752,
	284, 766,
	285, 766,
	-2, 754,
	-1, 62,
	240, 783,
	-2, 781,
	-1, 116,
	237, 1444,
	-2, 121,
	-1, 118,
	1, 148,
	657, 148,
	-2, 155,
	-1, 129,
	136, 391,
	243, 391,
	-2, 495,
	-1, 148,
	135, 155,
	176, 155,
	339, 155,
	-2, 515,
	-1, 798,
	87, 1461,
	-2, 1301,
	-1, 799,
	87, 1462,
	221, 1466,
	-2, 1302,
	-1, 800,
	221, 1465,
	-2, 39,
	-1, 880,
	60, 852,
	-2, 867,
	-1, 967,
	248, 40,
	253, 40,
	-2, 402,
	-1, 1052,
	1, 563,
	657, 563,
	-2, 155,
	-1, 1341,
	221, 1466,
	-2, 1302,
	-1, 1489,
	60, 853,
	-2, 872,
	-1, 1490,
	60, 854,
	-2, 873,
	-1, 1545,
	135, 155,
	176, 155,
	339, 155,
	-2, 441,
	-1, 1624,
	136, 391,
	243, 391,
	-2, 495,
	-1, 1633,
	248, 41,
	253, 41,
	-2, 403,
	-1, 1987,
	221, 1470,
	-2, 1464,
	-1, 1988,
	221, 1466,
	-2, 1462,
	-1, 2090,
	135, 155,
	176, 155,
	339, 155,
	-2, 442,
	-1, 2097,
	26, 176,
	-2, 178,
	-1, 2458,
	78, 95,
	88, 95,
	-2, 931,
	-1, 2526,
	632, 679,
	-2, 653,
	-1, 2693,
	50, 1403,
	-2, 1397,
	-1, 3345,
	632, 679,
	-2, 667,
	-1, 3434,
	23, 1822,
	33, 1822,
	177, 1822,
	260, 1822,
	319, 1822,
	320, 1822,
	321, 1822,
	322, 1822,
	323, 1822,
	324, 1822,
	325, 1822,
	327, 1822,
	328, 1822,
	329, 1822,
	330, 1822,
	331, 1822,
	332, 1822,
	333, 1822,
	334, 1822,
	335, 1822,
	336, 1822,
	337, 1822,
	338, 1822,
	340, 1822,
	342, 1822,
	343, 1822,
	344, 1822,
	345, 1822,
	346, 1822,
	347, 1822,
	348, 1822,
	349, 1822,
	350, 1822,
	353, 1822,
	354, 1822,
	355, 1822,
	356, 1822,
	357, 1822,
	359, 1822,
	360, 1822,
	361, 1822,
	362, 1822,
	503, 1822,
	-2, 611,
}

const yyPrivate = 57344

const yyLast = 48536

var yyAct = [...]int{
	1497, 3092, 3093, 809, 1854, 3094, 3326, 3507, 3518, 802,
	672, 3411, 3475, 2087, 3476, 2920, 3432, 2036, 3063, 1548,
	1117, 3376, 801, 1752, 3399, 2842, 2745, 2752, 3310, 3258,
	2802, 3308, 2016, 2807, 2804, 2803, 2801, 2806, 1115, 2805,
	2358, 3050, 2793, 2709, 897, 3122, 769, 2760, 1473, 3298,
	2706, 873, 2652, 2392, 2821, 1467, 654, 2431, 2157, 2707,
	2587, 2822, 763, 2710, 3127, 2979, 2959, 682, 1504, 651,
	2824, 5, 762, 2953, 2058, 2704, 764, 2694, 2418, 2945,
	1064, 2061, 2491, 2120, 2571, 1602, 2145, 768, 2848, 2125,
	39, 2523, 2492, 2188, 2493, 2075, 650, 999, 898, 652,
	929, 875, 2443, 40, 585, 157, 2042, 2018, 38, 2410,
	1649, 2062, 2394, 2424, 1975, 1949, 2063, 1850, 1983, 1869,
	1491, 1948, 868, 1093, 2563, 646, 143, 1978, 1808, 2166,
	2144, 2485, 2050, 1631, 2205, 962, 2127, 1537, 98, 957,
	2460, 99, 1517, 1873, 2065, 1471, 1827, 1281, 664, 1638,
	1353, 94, 933, 1748, 936, 968, 2142, 1730, 965, 937,
	2116, 963, 964, 935, 1536, 1522, 915, 877, 917, 881,
	887, 1945, 2043, 659, 1984, 1882, 1337, 1313, 884, 1113,
	1107, 79, 10, 9, 8, 883, 1757, 161, 900, 1597,
	882, 101, 121, 119, 120, 93, 1048, 885, 975, 126,
	1623, 127, 910, 658, 1357, 78, 87, 3335, 2516, 100,
	92, 3508, 2159, 2160, 2161, 627, 3051, 1361, 2790, 2159,
	3361, 2546, 2545, 641, 2514, 905, 909, 2203, 3006, 3043,
	588, 89, 3459, 1715, 89, 89, 2579, 122, 818, 819,
	820, 2580, 3357, 1001, 627, 890, 3362, 3356, 2812, 930,
	2, 128, 1815, 1830, 1004, 1814, 1018, 1019, 1020, 621,
	1023, 1024, 1025, 1026, 2013, 2014, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 925, 924, 876, 1813, 3412, 874, 978,
	891, 642, 105, 106, 107, 954, 110, 1812, 621, 116,
	1811, 618, 185, 1810, 2810, 583, 122, 899, 1005, 1008,
	1009, 953, 952, 951, 1788, 3097, 640, 3097, 3453, 184,
	818, 819, 820, 2246, 2390, 869, 870, 871, 872, 979,
	2816, 880, 2690, 1508, 1021, 2812, 644, 1298, 645, 955,
	923, 766, 767, 123, 2192, 145, 3357, 1282, 2809, 604,
	1506, 1012, 923, 766, 767, 2536, 166, 3479, 2420, 912,
	913, 602, 3418, 1509, 3463, 3461, 946, 2656, 941, 3528,
	3474, 3498, 1498, 2925, 122, 2924, 2039, 89, 2038, 2190,
	1507, 2539, 3311, 2359, 621, 1820, 2867, 156, 2191, 3462,
	3460, 2810, 3254, 144, 3253, 3056, 621, 1003, 3057, 3489,
	1002, 599, 3096, 3264, 3096, 3457, 3075, 3064, 2255, 3400,
	613, 80, 163, 80, 3408, 164, 3340, 2816, 2185, 3263,
	1859, 3437, 3074, 2887, 1282, 609, 1612, 2553, 2554, 2742,
	2743, 2082, 2083, 2391, 132, 133, 155, 154, 183, 2469,
	2741, 2813, 2468, 2136, 3418, 2470, 1538, 2578, 1539, 2252,
	2081, 621, 2562, 1083, 1292, 1314, 950, 80, 1057, 1058,
	82, 1110, 3140, 622, 867, 866, 2130, 2517, 3327, 1084,
	2015, 1071, 1295, 2253, 1296, 1297, 1072, 2864, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1323, 1322, 1324, 1325, 89,
	1060, 89, 1051, 2046, 621, 2481, 589, 2748, 591, 605,
	1077, 624, 622, 623, 595, 621, 593, 597, 606, 598,
	621, 592, 80, 603, 948, 2956, 594, 607, 608, 611,
	614, 615, 616, 612, 610, 635, 601, 625, 2813, 2100,
	2099, 1292, 1088, 1089, 2621, 89, 2434, 149, 130, 152,
	137, 129, 2749, 150, 151, 2875, 3480, 2046, 1796, 167,
	2844, 1022, 1047, 2427, 2428, 1288, 1085, 2873, 173, 138,
	639, 2435, 916, 633, 2849, 2564, 2751, 3481, 3442, 1109,
	3286, 1475, 3287, 141, 139, 134, 135, 136, 140, 1705,
	2247, 2248, 2250, 2249, 2746, 131, 3440, 1078, 622, 1535,
	89, 2524, 1071, 2167, 142, 3446, 3447, 1072, 2549, 2211,
	622, 2762, 2763, 2762, 2763, 1070, 184, 1069, 2747, 2226,
	3441, 2227, 2129, 2228, 2218, 2214, 2216, 2217, 2215, 2219,
	2220, 945, 2206, 1706, 947, 1707, 1104, 3510, 1731, 1090,
	123, 1055, 1288, 1061, 949, 1280, 1063, 2845, 1092, 1091,
	1736, 2753, 3454, 166, 1053, 2566, 950, 1046, 2837, 3045,
	926, 920, 918, 3044, 2212, 622, 2838, 1086, 1087, 2229,
	1028, 2210, 926, 920, 918, 1027, 2846, 2208, 3238, 3041,
	1067, 988, 1073, 1074, 1075, 1076, 986, 158, 2170, 2044,
	2045, 958, 184, 1478, 3101, 959, 2474, 2059, 959, 1275,
	647, 997, 996, 2622, 995, 1111, 1112, 977, 622, 163,
	994, 993, 164, 2209, 992, 2655, 123, 991, 2761, 622,
	2761, 1050, 990, 985, 622, 1616, 2764, 998, 3529, 166,
	2764, 950, 2764, 942, 934, 183, 3334, 2515, 932, 1328,
	944, 943, 1105, 2044, 2045, 626, 3414, 3486, 1328, 934,
	934, 970, 3522, 1349, 1339, 971, 1637, 1749, 2253, 2567,
	2143, 911, 2570, 2518, 2196, 153, 619, 2551, 1007, 2195,
	1331, 1332, 1333, 1334, 970, 1081, 3413, 1268, 1006, 815,
	1345, 620, 815, 815, 1745, 163, 1273, 1015, 164, 948,
	2189, 2783, 3040, 1610, 1287, 1284, 1285, 1286, 1291, 1293,
	1290, 2548, 1289, 901, 956, 977, 907, 907, 976, 1269,
	1270, 183, 1283, 980, 970, 2957, 1609, 1608, 982, 1049,
	2534, 1534, 983, 981, 2583, 1335, 146, 989, 3414, 147,
	2865, 1746, 987, 2267, 949, 1606, 587, 582, 2483, 2395,
	2397, 2750, 2187, 984, 3004, 3005, 167, 2814, 2815, 1717,
	1716, 1718, 1719, 1720, 2561, 173, 1735, 2560, 3413, 159,
	2818, 3073, 1739, 1636, 1737, 1738, 171, 1740, 1741, 1014,
	919, 1287, 1284, 1285, 1286, 1291, 1293, 1290, 3455, 1289,
	2133, 118, 919, 1329, 1330, 2538, 2425, 3323, 2993, 1283,
	2975, 2088, 2465, 1499, 1501, 1325, 1359, 2430, 1360, 2367,
	2254, 83, 1100, 1862, 1102, 1328, 976, 179, 3095, 949,
	3095, 1526, 1465, 1363, 1430, 1062, 2740, 88, 894, 88,
	2134, 2573, 167, 977, 1066, 2573, 2572, 2132, 1479, 2537,
	2572, 173, 1883, 1466, 2814, 2815, 113, 1094, 1482, 1758,
	2909, 977, 1099, 1101, 1108, 3348, 1884, 2818, 160, 165,
	162, 168, 169, 170, 172, 174, 175, 176, 177, 1068,
	1059, 2135, 1056, 88, 178, 180, 181, 182, 1000, 1530,
	3520, 2131, 1481, 3521, 158, 3519, 1485, 1080, 3036, 2969,
	977, 2207, 877, 1805, 1742, 1540, 1483, 1547, 1082, 1484,
	98, 2607, 1874, 99, 2284, 1874, 2507, 1466, 1436, 1437,
	1438, 1439, 1440, 3490, 1732, 2396, 1733, 1297, 114, 1734,
	1320, 1321, 1323, 1322, 1324, 1325, 2754, 3136, 88, 3011,
	2758, 1472, 3010, 1459, 976, 1296, 1297, 2757, 1298, 3445,
	970, 973, 974, 2174, 934, 1646, 2186, 1645, 967, 971,
	1635, 1097, 976, 101, 2184, 1098, 2179, 980, 970, 3482,
	158, 1298, 982, 2182, 988, 1103, 983, 981, 986, 966,
	2994, 2759, 1613, 1614, 1615, 1643, 2755, 1065, 1052, 889,
	1684, 2756, 3070, 3444, 3071, 1881, 1629, 3530, 1725, 1096,
	3524, 976, 3378, 1013, 1095, 2183, 1759, 1010, 1500, 2179,
	3246, 1480, 1678, 1754, 1503, 1681, 874, 1683, 1622, 1469,
	876, 1980, 3245, 3316, 977, 1729, 1651, 1832, 1652, 2588,
	1654, 1656, 3494, 1498, 1660, 1662, 1664, 1666, 1668, 1641,
	1682, 1833, 1326, 1327, 1831, 1531, 1532, 3379, 2181, 1690,
	1691, 2259, 2260, 2261, 1640, 1696, 1697, 1763, 1498, 3236,
	1486, 627, 1724, 1298, 1767, 1879, 159, 1605, 3317, 1700,
	1822, 1824, 1825, 171, 1880, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 3086, 1295, 3531, 1296, 1297, 1632, 1762, 1723,
	1620, 1619, 1618, 3085, 1823, 1766, 3018, 1768, 1769, 1770,
	1771, 3017, 1639, 1639, 1775, 1712, 1295, 1298, 1296, 1297,
	3007, 2791, 2590, 2779, 179, 2609, 1787, 2489, 1686, 818,
	819, 820, 2488, 1760, 1761, 976, 2139, 1611, 1726, 1710,
	1709, 970, 973, 974, 1708, 934, 1298, 1765, 1698, 967,
	971, 1692, 159, 1750, 1772, 1773, 1774, 3492, 1498, 171,
	1689, 1688, 2841, 1722, 1687, 160, 165, 162, 168, 169,
	170, 172, 174, 175, 176, 177, 1658, 3001, 627, 1711,
	122, 178, 180, 181, 182, 953, 952, 951, 1272, 2600,
	2599, 2598, 2592, 1535, 2596, 3483, 2591, 3343, 2589, 3342,
	179, 3424, 1498, 2594, 2472, 627, 1764, 1511, 1295, 3320,
	1296, 1297, 2593, 1316, 1317, 1318, 1319, 1320, 1321, 1323,
	1322, 1324, 1325, 1785, 3319, 1786, 2155, 2154, 2153, 2152,
	2595, 2597, 1318, 1319, 1320, 1321, 1323, 1322, 1324, 1325,
	3318, 160, 165, 162, 168, 169, 170, 172, 174, 175,
	176, 177, 1295, 1512, 1296, 1297, 3241, 178, 180, 181,
	182, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1300, 1809,
	2151, 2150, 3225, 1857, 1857, 1858, 2416, 3509, 1980, 1299,
	3224, 1295, 1977, 1296, 1297, 3470, 1498, 1314, 1801, 2582,
	95, 1979, 1855, 1855, 3135, 1298, 1828, 97, 3133, 1877,
	1298, 96, 3082, 1878, 39, 813, 1294, 1498, 1354, 1464,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1322, 1324,
	1325, 1835, 1298, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1298, 1941, 1826, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1323, 1322, 1324, 1325,
	2416, 3407, 1836, 104, 1463, 1339, 1498, 2321, 104, 1298,
	2051, 2052, 1462, 1298, 103, 1973, 102, 1294, 1498, 103,
	95, 102, 1875, 2416, 3386, 97, 1465, 1298, 3015, 3422,
	1498, 96, 2416, 3382, 3420, 1498, 1935, 1793, 1794, 1314,
	2002, 1987, 3000, 1298, 1986, 79, 1946, 1466, 1829, 1804,
	1802, 1803, 1937, 3369, 1498, 1498, 3267, 1499, 2009, 1985,
	2850, 2323, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323,
	1322, 1324, 1325, 3054, 3333, 1298, 3249, 1498, 1834, 1976,
	1295, 1298, 1296, 1297, 1498, 1295, 1498, 1296, 1297, 1498,
	3336, 2033, 2847, 3295, 1498, 2416, 3237, 3293, 1498, 3054,
	1498, 2416, 3052, 2311, 2782, 1861, 2781, 1295, 2498, 1296,
	1297, 3290, 1498, 3272, 2010, 1868, 1870, 2026, 2486, 2027,
	1946, 1295, 1461, 1296, 1297, 2179, 1498, 3276, 1498, 3271,
	1298, 1885, 1886, 1887, 1888, 2973, 1498, 1987, 1298, 2201,
	2056, 1990, 1991, 1298, 1295, 1899, 1296, 1297, 1295, 2200,
	1296, 1297, 2097, 2041, 98, 1985, 1298, 99, 2053, 2944,
	1498, 1314, 1295, 2266, 1296, 1297, 2057, 2281, 2060, 2332,
	1498, 1809, 2772, 2771, 98, 2768, 2769, 99, 1295, 97,
	1296, 1297, 2461, 1518, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1323, 1322, 1324, 1325, 2140, 1989, 2768, 2767, 1992,
	1993, 1298, 2032, 2440, 1498, 2253, 2547, 1601, 2528, 2069,
	1295, 1923, 1296, 1297, 2937, 1498, 1295, 1298, 1296, 1297,
	1604, 2021, 2934, 1498, 2521, 2522, 3229, 2932, 1498, 2101,
	1789, 2102, 2103, 2104, 2105, 1755, 2020, 2092, 1498, 2272,
	2280, 2091, 890, 2416, 2415, 2462, 1721, 2112, 2113, 2114,
	2115, 2073, 2008, 2031, 2412, 2464, 2106, 2107, 2108, 2109,
	2461, 2277, 1498, 2034, 1713, 1295, 1703, 1296, 1297, 97,
	2122, 1699, 2095, 1295, 1695, 1296, 1297, 2128, 1295, 2054,
	1296, 1297, 2168, 1694, 1298, 2897, 1498, 1860, 1498, 2079,
	2078, 1295, 2077, 1296, 1297, 1693, 925, 924, 2094, 2093,
	1915, 1904, 1905, 1906, 1907, 1917, 1908, 1909, 1910, 1922,
	1918, 1911, 1912, 1919, 1920, 1921, 1913, 1914, 1916, 2165,
	1601, 1600, 3228, 2462, 1513, 2138, 1106, 2277, 1546, 1545,
	2705, 3062, 2735, 2253, 2439, 2525, 1295, 2503, 1296, 1297,
	2123, 2968, 2253, 2432, 2118, 2119, 2432, 1756, 103, 2096,
	2968, 2137, 1295, 2141, 1296, 1297, 1294, 2970, 2149, 2173,
	3374, 1298, 2176, 3347, 2177, 1298, 2180, 1809, 2880, 1498,
	1298, 2416, 2193, 2440, 2213, 2123, 978, 2175, 2171, 2172,
	2882, 1314, 3019, 2230, 2231, 2929, 2770, 2235, 2678, 2440,
	2080, 2277, 2332, 2308, 2197, 2307, 2238, 2179, 2198, 2199,
	2162, 2049, 2194, 2241, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1323, 1322, 1324, 1325, 2440, 979, 1294, 2968, 1295,
	1298, 1296, 1297, 1502, 2179, 2011, 1639, 1860, 1806, 2244,
	1744, 2239, 2240, 3020, 3021, 3022, 2242, 1533, 1515, 961,
	960, 89, 3450, 879, 2794, 2243, 1498, 2204, 2986, 2387,
	1498, 3389, 2270, 2843, 2385, 1498, 2275, 3260, 1505, 2278,
	3226, 2279, 1674, 3147, 3035, 1298, 2286, 3032, 1828, 3013,
	2288, 2289, 2290, 1987, 2892, 1298, 1986, 2891, 1603, 2121,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2232, 2271, 2263, 2839, 2265, 2796, 1295, 2792, 1296, 1297,
	1295, 1298, 1296, 1297, 1514, 1295, 1298, 1296, 1297, 2529,
	2117, 1298, 2111, 1675, 1676, 1677, 2312, 2313, 2314, 2315,
	2316, 89, 2318, 2264, 2110, 1298, 2320, 2269, 2291, 1728,
	2325, 2326, 1634, 2327, 1630, 1599, 2330, 115, 2331, 2274,
	3023, 2495, 2334, 1791, 2251, 2306, 2338, 1051, 3261, 2273,
	2343, 2344, 2345, 2346, 2136, 1295, 2494, 1296, 1297, 2364,
	1498, 2980, 2981, 2357, 2024, 2360, 2361, 3504, 2262, 3502,
	1829, 3477, 3355, 2363, 2365, 1816, 1817, 1818, 1819, 1670,
	2368, 2369, 2370, 2371, 2372, 2347, 1498, 3024, 3025, 3026,
	2988, 2379, 2380, 3281, 2381, 2339, 1498, 2384, 2386, 2033,
	1295, 2388, 1296, 1297, 2495, 1792, 2283, 2983, 2788, 2939,
	1295, 2400, 1296, 1297, 2787, 2786, 1857, 2401, 2705, 2508,
	1298, 2233, 2985, 2724, 1863, 1864, 1671, 1672, 1673, 1866,
	2723, 907, 907, 1871, 3351, 1855, 1295, 1876, 1296, 1297,
	2727, 1295, 2725, 1296, 1297, 2728, 1295, 2726, 1296, 1297,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1295, 3262, 1296, 1297, 1924, 1925, 1926, 1927, 1928, 1929,
	1931, 2317, 1936, 2040, 1938, 1939, 1940, 1298, 1942, 1943,
	1944, 892, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1498, 1974, 1298, 1981, 1982,
	907, 2458, 907, 907, 907, 907, 907, 2399, 2319, 1298,
	2436, 1510, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	893, 2003, 2004, 2005, 2006, 2007, 39, 2030, 2417, 2455,
	2402, 2974, 2404, 2413, 2683, 2454, 1472, 2389, 2456, 2426,
	2682, 2729, 1298, 2449, 2450, 1295, 1298, 1296, 1297, 3117,
	3315, 3116, 3484, 3126, 2961, 3128, 1466, 2695, 2697, 907,
	895, 2520, 2960, 2409, 2414, 2964, 2698, 1298, 896, 2692,
	1743, 2506, 2429, 865, 2499, 2766, 2475, 1496, 1492, 1017,
	2479, 2459, 1498, 1883, 1298, 2047, 2048, 1016, 2858, 2482,
	2484, 2544, 1493, 2128, 3331, 2463, 2494, 1884, 2466, 3115,
	2576, 1271, 1295, 2535, 1296, 1297, 123, 2497, 2476, 2473,
	2966, 2086, 2500, 2501, 95, 1298, 97, 2028, 2029, 1495,
	3516, 1494, 2784, 2487, 1298, 96, 2236, 3233, 3429, 1298,
	3332, 3037, 1295, 3256, 1296, 1297, 2765, 2555, 2556, 2557,
	2558, 2559, 799, 2496, 1295, 2453, 1296, 1297, 2035, 102,
	1298, 2935, 2542, 2504, 2051, 2052, 2505, 2509, 2510, 2511,
	2225, 1809, 2569, 1298, 903, 904, 2541, 2224, 2907, 1622,
	2124, 1298, 2611, 2612, 2613, 2614, 2615, 1295, 2223, 1296,
	1297, 1295, 2577, 1296, 1297, 1298, 95, 2946, 2530, 2531,
	2222, 2620, 1298, 97, 2221, 189, 1298, 96, 189, 2903,
	1298, 632, 1295, 2540, 1296, 1297, 638, 2257, 2889, 1298,
	3303, 3302, 2603, 2888, 2601, 2681, 189, 104, 2586, 1295,
	103, 1296, 1297, 2680, 104, 104, 1298, 3284, 103, 2565,
	102, 189, 3134, 3132, 2885, 103, 103, 102, 2616, 97,
	1298, 2568, 2574, 2584, 3131, 2575, 3124, 2585, 2490, 3033,
	1295, 2965, 1296, 1297, 2963, 2383, 638, 189, 638, 1295,
	2797, 1296, 1297, 2163, 1295, 1617, 1296, 1297, 902, 2382,
	3123, 2633, 2602, 2635, 2954, 2432, 2378, 2604, 3506, 3505,
	2377, 3105, 2657, 2412, 2376, 1295, 2662, 1296, 1297, 2646,
	2647, 2648, 2649, 2375, 2623, 2309, 2659, 2022, 1295, 1527,
	1296, 1297, 1519, 108, 109, 1976, 1295, 1976, 1296, 1297,
	2374, 1298, 3505, 3506, 3321, 2999, 1298, 3, 2714, 2625,
	1295, 91, 1296, 1297, 2373, 1, 3003, 1295, 2631, 1296,
	1297, 1295, 3439, 1296, 1297, 1295, 2732, 1296, 1297, 600,
	2012, 1470, 3478, 3435, 1295, 3436, 1296, 1297, 2685, 2662,
	2641, 2642, 2643, 2644, 2645, 1714, 2702, 2658, 1704, 2660,
	3065, 1295, 2711, 1296, 1297, 2661, 1754, 1947, 3257, 2800,
	2717, 2734, 2169, 3031, 2686, 1295, 2126, 1296, 1297, 969,
	2069, 2445, 2448, 2449, 2450, 2446, 2673, 2447, 2451, 2677,
	148, 2708, 2089, 2090, 3402, 2362, 2708, 112, 927, 2684,
	2356, 111, 972, 1079, 2164, 881, 3055, 2480, 2069, 2069,
	2069, 2069, 2069, 2098, 2687, 2699, 2700, 1552, 1550, 1551,
	1549, 883, 2736, 1554, 1553, 2737, 882, 2820, 2069, 2716,
	2866, 2069, 2718, 98, 2730, 2721, 99, 2785, 2719, 2720,
	2738, 2722, 2310, 2908, 1795, 2285, 1295, 1298, 1296, 1297,
	634, 1295, 2452, 1296, 1297, 628, 2292, 2293, 2294, 2295,
	2744, 186, 2860, 2823, 2774, 1298, 2776, 2775, 1541, 1520,
	2921, 1011, 2777, 2778, 2674, 2675, 2676, 2835, 590, 2827,
	2773, 2799, 2877, 2878, 2879, 2202, 2881, 2883, 1298, 2828,
	596, 1346, 1298, 1790, 2679, 2128, 2852, 2467, 2819, 2855,
	2890, 1354, 2798, 1298, 922, 2894, 2895, 2896, 2898, 2899,
	2900, 2901, 2834, 914, 2902, 1298, 2904, 2905, 2906, 2023,
	2403, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
	2919, 2355, 2854, 2853, 2851, 2856, 2857, 921, 3234, 2926,
	2713, 2958, 2930, 2691, 2931, 2933, 2693, 2936, 2938, 2354,
	2940, 2941, 2942, 2943, 2868, 2869, 2871, 2870, 2949, 2861,
	2872, 2419, 2874, 2862, 2876, 2696, 2689, 3314, 3125, 3387,
	1298, 2477, 2353, 2923, 1516, 2928, 2352, 1496, 1492, 2282,
	2927, 1872, 1295, 1336, 1296, 1297, 1298, 2351, 2066, 3100,
	1821, 656, 1493, 2971, 2972, 655, 653, 2976, 2405, 2350,
	1295, 2433, 1296, 1297, 1298, 1301, 803, 2393, 2951, 1528,
	2444, 2442, 2441, 2234, 1298, 2074, 2982, 1489, 1490, 1495,
	1518, 1494, 2952, 1295, 2978, 1296, 1297, 1295, 3431, 1296,
	1297, 2068, 2064, 2411, 1298, 2947, 2948, 754, 1295, 753,
	1296, 1297, 1298, 665, 657, 649, 752, 751, 2955, 2996,
	1295, 2962, 1296, 1297, 2349, 2977, 2826, 3415, 2550, 2840,
	2552, 2478, 2967, 2836, 1279, 1488, 643, 2984, 940, 1298,
	2348, 2863, 3338, 2256, 2991, 2992, 2886, 1487, 1902, 1903,
	2987, 3345, 2808, 3049, 2789, 2526, 2950, 2156, 2342, 2989,
	65, 2827, 43, 3012, 3038, 3039, 2997, 2990, 2341, 2998,
	3309, 2828, 3053, 2069, 3375, 1295, 1298, 1296, 1297, 750,
	747, 3102, 3027, 3103, 3104, 3028, 3029, 3030, 2340, 3059,
	3060, 1295, 2653, 1296, 1297, 189, 2337, 189, 1298, 2654,
	189, 3358, 3359, 746, 3360, 1930, 3008, 3009, 1276, 1295,
	3452, 1296, 1297, 1797, 3072, 90, 1298, 3076, 34, 1295,
	1298, 1296, 1297, 2336, 3014, 33, 3016, 32, 31, 30,
	638, 25, 638, 638, 24, 23, 22, 21, 27, 1295,
	20, 1296, 1297, 19, 3087, 18, 2811, 1295, 3473, 1296,
	1297, 3515, 638, 189, 3061, 117, 52, 49, 3042, 3091,
	2335, 47, 3046, 3047, 3048, 1314, 125, 124, 1310, 50,
	1311, 3099, 46, 1054, 1295, 44, 1296, 1297, 29, 3106,
	1341, 3081, 2333, 28, 1312, 1326, 1327, 1309, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1323, 1322, 1324, 1325, 2581,
	2329, 17, 16, 15, 2328, 14, 13, 12, 11, 3089,
	7, 1295, 6, 1296, 1297, 37, 36, 35, 907, 1800,
	3098, 2605, 2606, 26, 4, 2608, 3077, 2513, 2610, 2158,
	0, 0, 3120, 1295, 0, 1296, 1297, 1298, 0, 0,
	0, 0, 1857, 3149, 0, 0, 0, 0, 2617, 2618,
	2619, 1295, 1298, 1296, 1297, 1295, 0, 1296, 1297, 0,
	2624, 1855, 0, 2626, 2627, 2628, 0, 2711, 3143, 2629,
	2630, 2711, 3129, 1950, 2632, 3130, 3121, 2634, 3137, 3145,
	2636, 2637, 2638, 2639, 3139, 0, 0, 0, 2640, 1950,
	1950, 1950, 1950, 1950, 3141, 2708, 0, 3150, 3151, 0,
	3248, 1298, 0, 3235, 0, 0, 3153, 907, 0, 3255,
	39, 1298, 0, 0, 2663, 2664, 2665, 2666, 2667, 2668,
	0, 2324, 1341, 2669, 2670, 0, 2671, 0, 2672, 3265,
	3266, 0, 3268, 0, 3269, 3270, 2322, 3231, 3239, 3273,
	3274, 3275, 3232, 3277, 3280, 3278, 3230, 0, 3279, 0,
	3251, 1857, 3282, 3259, 0, 0, 0, 0, 0, 3289,
	3291, 3292, 3294, 3296, 3297, 3299, 3252, 0, 0, 0,
	1855, 0, 1295, 2703, 1296, 1297, 0, 0, 0, 189,
	0, 0, 0, 638, 638, 2287, 0, 1295, 0, 1296,
	1297, 3242, 3243, 3244, 0, 2276, 0, 0, 2733, 189,
	0, 0, 3283, 3329, 0, 3285, 3247, 0, 0, 3288,
	0, 0, 0, 0, 0, 3325, 0, 3307, 3304, 3305,
	638, 0, 0, 189, 3306, 0, 0, 0, 0, 0,
	3313, 0, 0, 0, 3322, 638, 1295, 2711, 1296, 1297,
	3324, 189, 0, 0, 0, 0, 1295, 0, 1296, 1297,
	0, 0, 3328, 2445, 2448, 2449, 2450, 2446, 2795, 2447,
	2451, 0, 0, 2980, 2981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1341, 0, 0, 3330, 0, 0, 638, 638, 0,
	638, 0, 638, 638, 0, 638, 638, 638, 638, 638,
	638, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 1341, 638, 1341, 189, 0, 0, 0, 3349, 3354,
	0, 0, 0, 0, 0, 3337, 0, 0, 0, 0,
	0, 3344, 0, 0, 189, 0, 0, 0, 0, 3370,
	2884, 0, 0, 0, 0, 3371, 3372, 638, 0, 189,
	3350, 0, 0, 0, 2893, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 0, 189, 3364, 3383, 3346, 3365,
	0, 0, 3353, 0, 0, 0, 0, 0, 0, 3373,
	3363, 189, 0, 0, 39, 0, 0, 0, 189, 0,
	3341, 0, 0, 3409, 3410, 0, 0, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 638, 3419, 3421, 3423,
	3416, 3417, 3380, 3385, 0, 0, 3393, 3401, 3390, 3398,
	3395, 3394, 3392, 3397, 0, 3396, 3259, 3404, 0, 0,
	0, 0, 3451, 0, 0, 0, 0, 0, 2708, 0,
	0, 3471, 0, 3427, 3388, 0, 0, 0, 0, 0,
	0, 1569, 0, 3448, 3438, 3443, 3430, 0, 0, 0,
	39, 0, 3416, 3417, 3458, 0, 0, 0, 0, 0,
	0, 0, 3469, 3456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3467, 0, 0, 3472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3491, 3493, 3495, 3485, 0,
	0, 0, 0, 0, 0, 3488, 1754, 1857, 3500, 3487,
	0, 0, 0, 3034, 3496, 0, 3499, 3497, 1349, 3503,
	3501, 0, 0, 0, 0, 0, 1855, 3514, 0, 0,
	3416, 3417, 3511, 0, 0, 0, 0, 3517, 0, 0,
	0, 0, 0, 3526, 3527, 3523, 3058, 3525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	638, 638, 1857, 3532, 3533, 3534, 3535, 0, 638, 3279,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3078, 0, 3079, 0, 0, 3080, 0, 0, 3083,
	3084, 0, 0, 0, 0, 0, 0, 0, 3088, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 3090, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 1341, 0,
	3107, 0, 0, 3108, 0, 3109, 3110, 0, 3111, 0,
	3112, 0, 0, 0, 0, 3113, 0, 0, 1570, 0,
	0, 0, 0, 638, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3146, 0, 0, 3148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3152, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 1583, 1586, 1587,
	1588, 1589, 1590, 1591, 3227, 1592, 1593, 1594, 1595, 1596,
	1571, 1572, 1573, 1574, 1555, 1556, 1584, 0, 1558, 0,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 0,
	0, 1568, 1575, 1576, 1577, 1578, 189, 1579, 1580, 1581,
	1582, 638, 0, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 123, 638, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 189, 0, 0, 0, 638, 0, 0, 1988,
	189, 0, 189, 0, 189, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 638,
	0, 156, 0, 0, 3312, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 3171, 3173, 3172, 3190,
	3191, 3192, 3193, 3194, 3195, 3196, 704, 0, 1625, 1626,
	155, 154, 183, 0, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 638, 145, 0, 0, 0, 638,
	0, 0, 0, 638, 638, 0, 166, 0, 3352, 0,
	0, 149, 1627, 152, 0, 1624, 0, 150, 151, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 3366, 173, 0, 3367, 0, 3368, 156, 0, 0,
	0, 189, 0, 144, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 189, 0,
	0, 189, 163, 189, 0, 164, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 1625, 1626, 155, 154, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3177, 0, 0, 0, 0, 0,
	3449, 0, 0, 0, 0, 0, 0, 0, 0, 3185,
	3186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3464, 0, 3465, 0, 3466, 0, 0, 0, 0,
	0, 0, 0, 1341, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 1627, 152,
	0, 1624, 0, 150, 151, 0, 0, 0, 0, 167,
	0, 770, 0, 683, 774, 685, 771, 772, 173, 681,
	684, 773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 3512, 0, 3513, 0, 702, 703, 3170,
	3174, 3175, 3176, 3187, 3188, 3189, 3197, 3199, 735, 3198,
	3200, 3201, 3202, 3205, 3206, 3207, 3208, 3203, 3204, 3209,
	3154, 3158, 3155, 3156, 3157, 3169, 3159, 3160, 3161, 3162,
	3163, 3164, 3165, 3166, 3167, 3168, 3210, 3211, 3212, 3213,
	3214, 3215, 3180, 3184, 3183, 3181, 3182, 3178, 3179, 0,
	146, 0, 0, 147, 0, 0, 0, 0, 0, 0,
	0, 775, 0, 776, 0, 0, 780, 0, 0, 0,
	782, 781, 0, 783, 749, 748, 0, 0, 777, 778,
	0, 779, 0, 159, 189, 0, 1569, 158, 0, 0,
	171, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 189, 3216, 3217, 3218, 3219,
	3220, 3221, 3222, 3223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 160, 165, 162, 168, 169, 170, 172, 174,
	175, 176, 177, 0, 0, 0, 0, 0, 178, 180,
	181, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 638,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 146, 0, 0, 147,
	1557, 0, 0, 0, 0, 0, 638, 0, 0, 0,
	0, 0, 0, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 171, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 189, 189, 189, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 189, 179, 0, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 160, 165,
	162, 168, 169, 170, 172, 174, 175, 176, 177, 0,
	0, 0, 0, 0, 178, 180, 181, 182, 0, 0,
	0, 0, 1583, 1586, 1587, 1588, 1589, 1590, 1591, 0,
	1592, 1593, 1594, 1595, 1596, 1571, 1572, 1573, 1574, 1555,
	1556, 1584, 0, 1558, 638, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 0, 0, 1568, 1575, 1576, 1577,
	1578, 0, 1579, 1580, 1581, 1582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 41,
	42, 82, 638, 0, 0, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 45, 71, 72, 0, 69, 73, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 638,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 0, 0, 89, 1341, 0, 0,
	638, 638, 1341, 189, 189, 189, 189, 189, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 189, 0, 189, 0, 0, 189, 189, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 638, 0, 0, 1341, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 189, 48, 51, 54, 53, 56, 0,
	68, 0, 0, 77, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 816, 0, 1980, 0, 0,
	817, 0, 0, 0, 0, 0, 57, 85, 84, 0,
	1856, 66, 67, 55, 0, 0, 0, 0, 0, 75,
	76, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 0, 0, 0, 0, 0, 0,
	59, 60, 0, 61, 62, 63, 64, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 189,
	189, 189, 83, 0, 0, 0, 0, 0, 0, 638,
	638, 0, 0, 0, 0, 0, 0, 814, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 638, 638, 638,
	0, 0, 0, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 878, 89, 81,
	0, 816, 0, 0, 0, 804, 817, 818, 819, 820,
	805, 0, 0, 806, 807, 0, 808, 0, 878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	813, 821, 822, 939, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2829, 2830, 0,
	0, 1341, 0, 0, 0, 0, 638, 0, 638, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 638, 0, 0, 0, 0, 0,
	0, 2831, 89, 0, 0, 816, 0, 638, 0, 804,
	817, 818, 819, 820, 805, 0, 0, 806, 807, 0,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 813, 821, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 638, 0, 0,
	0, 638, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2832, 2833, 0, 0, 0, 0, 0,
	0, 2829, 2830, 0, 0, 0, 0, 0, 0, 0,
	638, 0, 0, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 0, 774, 0, 771,
	772, 0, 0, 0, 773, 0, 0, 0, 0, 638,
	0, 0, 0, 0, 0, 2831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2832, 2833, 0,
	0, 0, 0, 0, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1341, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 0, 0,
	638, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 638, 0, 0,
	0, 0, 0, 637, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 1114, 1114, 0,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 0, 638, 878, 1338, 1343, 1344, 0, 1347,
	0, 1348, 1350, 1351, 1352, 0, 1355, 1356, 1358, 1358,
	0, 1358, 1362, 1362, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 0,
	0, 0, 0, 1429, 0, 1431, 1432, 1433, 1434, 1435,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 1362,
	1362, 1362, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 816, 0, 0, 0,
	0, 817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 1468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 878, 0, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 1267, 637,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 1114, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 756, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	637, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 908, 908, 0, 0, 0, 0, 0, 0,
	0, 586, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 1633, 0, 0,
	0, 0, 0, 0, 0, 1642, 0, 0, 1340, 1644,
	0, 0, 1647, 1648, 637, 637, 0, 637, 0, 637,
	637, 0, 637, 637, 637, 637, 637, 637, 0, 0,
	0, 0, 0, 0, 0, 1340, 1679, 1680, 1340, 637,
	1340, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 2067,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 637, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 2258, 637,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 637, 0, 0, 0, 0, 0, 2268, 0, 586,
	0, 586, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 2366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2398, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2437, 2438, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 878, 2457,
	0, 637, 0, 0, 0, 0, 0, 0, 2146, 2147,
	2148, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 637, 1642, 0, 0, 1642, 0,
	1642, 0, 0, 0, 0, 0, 2178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 637, 0, 0, 0,
	637, 637, 0, 888, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2533, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 1342, 0, 1342, 586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	1340, 0, 637, 0, 0, 0, 0, 0, 0, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 2650, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 1777, 586, 586, 586, 586, 586, 586, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 0, 0, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2712, 0, 81, 0, 0, 2067, 2067,
	2067, 2067, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2067, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2817, 0, 0, 0, 0, 931,
	0, 938, 0, 0, 2825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 2471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 908, 908, 0,
	0, 0, 1342, 637, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 1642, 1642, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 2543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 908, 1753, 908, 908,
	908, 908, 908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2067, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 2995, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 1753, 586, 0, 586, 0, 586, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 1340, 0, 0, 637, 637, 1340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3114, 0, 3118, 3119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2712, 2780,
	81, 0, 2712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 1340, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 586, 0, 0, 586, 0, 2237, 0, 0,
	0, 0, 0, 1116, 586, 1116, 1116, 0, 0, 3240,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 0,
	2859, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1342, 2712, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 0, 3002, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1476, 1477, 586, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 637, 637, 637, 0, 0, 0,
	0, 0, 0, 1524, 0, 3384, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 1542, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 1650, 0, 1650, 0, 1650, 1650, 0, 1659, 1650,
	1650, 1650, 1650, 1650, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 931, 2512, 3468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 0,
	0, 0, 0, 637, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1342, 0, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 586, 586, 586, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 586,
	586, 0, 0, 0, 0, 0, 0, 0, 0, 1116,
	0, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 637, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1116, 1116, 0, 0, 0, 0, 586,
	0, 1798, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1342, 0, 0, 0, 0, 1342, 586, 586, 586,
	586, 586, 0, 0, 0, 0, 0, 0, 0, 2731,
	637, 0, 0, 0, 0, 1701, 0, 586, 0, 0,
	586, 2739, 1753, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 1340, 0, 637, 0, 0, 1900, 1901, 0, 0,
	0, 1342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 637, 637, 0,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 586, 0, 1116, 586, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 1524,
	637, 0, 1116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 931, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 938, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 0, 0, 931, 0, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 0, 0, 586, 586, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 1851, 0, 0, 0, 1851, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 0, 0, 2527, 0, 0, 0,
	0, 0, 0, 0, 0, 2532, 0, 0, 1342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2651, 0, 0, 0, 0,
	0, 0, 0, 1116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1116, 0, 0, 0,
	0, 0, 0, 2715, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3066,
	3067, 3068, 3069, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3142,
	0, 3144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3300, 0, 0, 0, 3300, 3300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1116, 1116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 2922, 0, 3433, 1250, 1235, 496,
	0, 1178, 1253, 1147, 1166, 1263, 1169, 1172, 1214, 1126,
	1192, 399, 1163, 1119, 1151, 1121, 1158, 1122, 1149, 1180,
	257, 1146, 1237, 1196, 1252, 350, 254, 1128, 1152, 413,
	1168, 196, 1216, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 1259, 354, 1202,
	0, 476, 384, 0, 0, 0, 1182, 1241, 1190, 1228,
	1177, 1215, 1136, 1201, 1254, 1164, 1211, 1255, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 3405,
	800, 0, 0, 0, 0, 3406, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 1160, 1208, 1249,
	1161, 1210, 252, 307, 259, 251, 501, 1260, 1240, 1125,
	1189, 1248, 0, 0, 219, 1251, 1184, 0, 1213, 0,
	1266, 1120, 1204, 0, 1123, 1127, 1262, 1244, 1155, 262,
	0, 0, 0, 0, 0, 0, 0, 1181, 1191, 1225,
	1229, 1175, 0, 0, 0, 0, 0, 0, 0, 1153,
	0, 1200, 0, 0, 0, 1132, 1124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1179,
	0, 0, 0, 0, 1135, 0, 1154, 1226, 0, 1118,
	284, 1129, 385, 244, 0, 1233, 1243, 1176, 541, 1247,
	1174, 1173, 1220, 1133, 1239, 1167, 349, 1131, 316, 191,
	215, 0, 1165, 395, 441, 453, 1238, 1150, 1159, 242,
	1157, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 1199, 1218, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 1130, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 1145, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 1234, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 1223, 1265, 408, 452, 230,
	522, 475, 1140, 1144, 1138, 1205, 1139, 1194, 1195, 1141,
	1256, 1257, 1258, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 1227, 1134, 0, 1142, 1143, 1236, 1245, 1246,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	1198, 190, 211, 352, 1261, 434, 275, 559, 532, 527,
	197, 213, 1137, 249, 1148, 1156, 0, 1162, 1170, 1171,
	1183, 1185, 1186, 1187, 1188, 1206, 1207, 1209, 1217, 1219,
	1222, 1224, 1231, 1242, 1264, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 1197, 1203, 365, 268, 291, 306, 1212, 531, 481,
	217, 446, 277, 240, 1230, 1232, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	1193, 1221, 360, 497, 498, 302, 380, 0, 0, 0,
	1250, 1235, 496, 0, 1178, 1253, 1147, 1166, 1263, 1169,
	1172, 1214, 1126, 1192, 399, 1163, 1119, 1151, 1121, 1158,
	1122, 1149, 1180, 257, 1146, 1237, 1196, 1252, 350, 254,
	1128, 1152, 413, 1168, 196, 1216, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	1259, 354, 1202, 0, 476, 384, 0, 0, 0, 1182,
	1241, 1190, 1228, 1177, 1215, 1136, 1201, 1254, 1164, 1211,
	1255, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	1160, 1208, 1249, 1161, 1210, 252, 307, 259, 251, 501,
	1260, 1240, 1125, 1189, 1248, 0, 0, 219, 1251, 1184,
	0, 1213, 0, 1266, 1120, 1204, 0, 1123, 1127, 1262,
	1244, 1155, 262, 0, 0, 0, 0, 0, 0, 0,
	1181, 1191, 1225, 1229, 1175, 0, 0, 0, 0, 0,
	2740, 0, 1153, 0, 1200, 0, 0, 0, 1132, 1124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1179, 0, 0, 0, 0, 1135, 0, 1154,
	1226, 0, 1118, 284, 1129, 385, 244, 0, 1233, 1243,
	1176, 541, 1247, 1174, 1173, 1220, 1133, 1239, 1167, 349,
	1131, 316, 191, 215, 0, 1165, 395, 441, 453, 1238,
	1150, 1159, 242, 1157, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 1199, 1218, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 1130, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 1145, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 1234,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 1223, 1265,
	408, 452, 230, 522, 475, 1140, 1144, 1138, 1205, 1139,
	1194, 1195, 1141, 1256, 1257, 1258, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 1227, 1134, 0, 1142, 1143,
	1236, 1245, 1246, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 1198, 190, 211, 352, 1261, 434, 275,
	559, 532, 527, 197, 213, 1137, 249, 1148, 1156, 0,
	1162, 1170, 1171, 1183, 1185, 1186, 1187, 1188, 1206, 1207,
	1209, 1217, 1219, 1222, 1224, 1231, 1242, 1264, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 1197, 1203, 365, 268, 291, 306,
	1212, 531, 481, 217, 446, 277, 240, 1230, 1232, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 1193, 1221, 360, 497, 498, 302, 380,
	0, 0, 0, 1250, 1235, 496, 0, 1178, 1253, 1147,
	1166, 1263, 1169, 1172, 1214, 1126, 1192, 399, 1163, 1119,
	1151, 1121, 1158, 1122, 1149, 1180, 257, 1146, 1237, 1196,
	1252, 350, 254, 1128, 1152, 413, 1168, 196, 1216, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 1259, 354, 1202, 0, 476, 384, 0,
	0, 0, 1182, 1241, 1190, 1228, 1177, 1215, 1136, 1201,
	1254, 1164, 1211, 1255, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 1160, 1208, 1249, 1161, 1210, 252, 307,
	259, 251, 501, 1260, 1240, 1125, 1189, 1248, 0, 0,
	219, 1251, 1184, 0, 1213, 0, 1266, 1120, 1204, 0,
	1123, 1127, 1262, 1244, 1155, 262, 0, 0, 0, 0,
	0, 0, 0, 1181, 1191, 1225, 1229, 1175, 0, 0,
	0, 0, 0, 2701, 0, 1153, 0, 1200, 0, 0,
	0, 1132, 1124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1179, 0, 0, 0, 0,
	1135, 0, 1154, 1226, 0, 1118, 284, 1129, 385, 244,
	0, 1233, 1243, 1176, 541, 1247, 1174, 1173, 1220, 1133,
	1239, 1167, 349, 1131, 316, 191, 215, 0, 1165, 395,
	441, 453, 1238, 1150, 1159, 242, 1157, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 1199, 1218, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 1130, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 1145,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 1234, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 1223, 1265, 408, 452, 230, 522, 475, 1140, 1144,
	1138, 1205, 1139, 1194, 1195, 1141, 1256, 1257, 1258, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 1227, 1134,
	0, 1142, 1143, 1236, 1245, 1246, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 1198, 190, 211, 352,
	1261, 434, 275, 559, 532, 527, 197, 213, 1137, 249,
	1148, 1156, 0, 1162, 1170, 1171, 1183, 1185, 1186, 1187,
	1188, 1206, 1207, 1209, 1217, 1219, 1222, 1224, 1231, 1242,
	1264, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 1197, 1203, 365,
	268, 291, 306, 1212, 531, 481, 217, 446, 277, 240,
	1230, 1232, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 1193, 1221, 360, 497,
	498, 302, 380, 0, 0, 0, 1250, 1235, 496, 0,
	1178, 1253, 1147, 1166, 1263, 1169, 1172, 1214, 1126, 1192,
	399, 1163, 1119, 1151, 1121, 1158, 1122, 1149, 1180, 257,
	1146, 1237, 1196, 1252, 350, 254, 1128, 1152, 413, 1168,
	196, 1216, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 1259, 354, 1202, 0,
	476, 384, 0, 0, 0, 1182, 1241, 1190, 1228, 1177,
	1215, 1136, 1201, 1254, 1164, 1211, 1255, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 800,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 1160, 1208, 1249, 1161,
	1210, 252, 307, 259, 251, 501, 1260, 1240, 1125, 1189,
	1248, 0, 0, 219, 1251, 1184, 0, 1213, 0, 1266,
	1120, 1204, 0, 1123, 1127, 1262, 1244, 1155, 262, 0,
	0, 0, 0, 0, 0, 0, 1181, 1191, 1225, 1229,
	1175, 0, 0, 0, 0, 0, 2055, 0, 1153, 0,
	1200, 0, 0, 0, 1132, 1124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1179, 0,
	0, 0, 0, 1135, 0, 1154, 1226, 0, 1118, 284,
	1129, 385, 244, 0, 1233, 1243, 1176, 541, 1247, 1174,
	1173, 1220, 1133, 1239, 1167, 349, 1131, 316, 191, 215,
	0, 1165, 395, 441, 453, 1238, 1150, 1159, 242, 1157,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	1199, 1218, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 1130, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 1145, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 1234, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 1223, 1265, 408, 452, 230, 522,
	475, 1140, 1144, 1138, 1205, 1139, 1194, 1195, 1141, 1256,
	1257, 1258, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 1227, 1134, 0, 1142, 1143, 1236, 1245, 1246, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 1198,
	190, 211, 352, 1261, 434, 275, 559, 532, 527, 197,
	213, 1137, 249, 1148, 1156, 0, 1162, 1170, 1171, 1183,
	1185, 1186, 1187, 1188, 1206, 1207, 1209, 1217, 1219, 1222,
	1224, 1231, 1242, 1264, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	1197, 1203, 365, 268, 291, 306, 1212, 531, 481, 217,
	446, 277, 240, 1230, 1232, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 1193,
	1221, 360, 497, 498, 302, 380, 0, 0, 0, 1250,
	1235, 496, 0, 1178, 1253, 1147, 1166, 1263, 1169, 1172,
	1214, 1126, 1192, 399, 1163, 1119, 1151, 1121, 1158, 1122,
	1149, 1180, 257, 1146, 1237, 1196, 1252, 350, 254, 1128,
	1152, 413, 1168, 196, 1216, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 1259,
	354, 1202, 0, 476, 384, 0, 0, 0, 1182, 1241,
	1190, 1228, 1177, 1215, 1136, 1201, 1254, 1164, 1211, 1255,
	309, 237, 311, 195, 396, 477, 273, 0, 89, 0,
	0, 0, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1160,
	1208, 1249, 1161, 1210, 252, 307, 259, 251, 501, 1260,
	1240, 1125, 1189, 1248, 0, 0, 219, 1251, 1184, 0,
	1213, 0, 1266, 1120, 1204, 0, 1123, 1127, 1262, 1244,
	1155, 262, 0, 0, 0, 0, 0, 0, 0, 1181,
	1191, 1225, 1229, 1175, 0, 0, 0, 0, 0, 0,
	0, 1153, 0, 1200, 0, 0, 0, 1132, 1124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1179, 0, 0, 0, 0, 1135, 0, 1154, 1226,
	0, 1118, 284, 1129, 385, 244, 0, 1233, 1243, 1176,
	541, 1247, 1174, 1173, 1220, 1133, 1239, 1167, 349, 1131,
	316, 191, 215, 0, 1165, 395, 441, 453, 1238, 1150,
	1159, 242, 1157, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 1199, 1218, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	1130, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 1145, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 1234, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 1223, 1265, 408,
	452, 230, 522, 475, 1140, 1144, 1138, 1205, 1139, 1194,
	1195, 1141, 1256, 1257, 1258, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 1227, 1134, 0, 1142, 1143, 1236,
	1245, 1246, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 1198, 190, 211, 352, 1261, 434, 275, 559,
	532, 527, 197, 213, 1137, 249, 1148, 1156, 0, 1162,
	1170, 1171, 1183, 1185, 1186, 1187, 1188, 1206, 1207, 1209,
	1217, 1219, 1222, 1224, 1231, 1242, 1264, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 1197, 1203, 365, 268, 291, 306, 1212,
	531, 481, 217, 446, 277, 240, 1230, 1232, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 1193, 1221, 360, 497, 498, 302, 380, 0,
	0, 0, 1250, 1235, 496, 0, 1178, 1253, 1147, 1166,
	1263, 1169, 1172, 1214, 1126, 1192, 399, 1163, 1119, 1151,
	1121, 1158, 1122, 1149, 1180, 257, 1146, 1237, 1196, 1252,
	350, 254, 1128, 1152, 413, 1168, 196, 1216, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 1259, 354, 1202, 0, 476, 384, 0, 0,
	0, 1182, 1241, 1190, 1228, 1177, 1215, 1136, 1201, 1254,
	1164, 1211, 1255, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1160, 1208, 1249, 1161, 1210, 252, 307, 259,
	251, 501, 1260, 1240, 1125, 1189, 1248, 0, 0, 219,
	1251, 1184, 0, 1213, 0, 1266, 1120, 1204, 0, 1123,
	1127, 1262, 1244, 1155, 262, 0, 0, 0, 0, 0,
	0, 0, 1181, 1191, 1225, 1229, 1175, 0, 0, 0,
	0, 0, 0, 0, 1153, 0, 1200, 0, 0, 0,
	1132, 1124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1179, 0, 0, 0, 0, 1135,
	0, 1154, 1226, 0, 1118, 284, 1129, 385, 244, 0,
	1233, 1243, 1176, 541, 1247, 1174, 1173, 1220, 1133, 1239,
	1167, 349, 1131, 316, 191, 215, 0, 1165, 395, 441,
	453, 1238, 1150, 1159, 242, 1157, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 1199, 1218, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 1130, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 1145, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 1234, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	1223, 1265, 408, 452, 230, 522, 475, 1140, 1144, 1138,
	1205, 1139, 1194, 1195, 1141, 1256, 1257, 1258, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 1227, 1134, 0,
	1142, 1143, 1236, 1245, 1246, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 1198, 190, 211, 352, 1261,
	434, 275, 559, 532, 527, 197, 213, 1137, 249, 1148,
	1156, 0, 1162, 1170, 1171, 1183, 1185, 1186, 1187, 1188,
	1206, 1207, 1209, 1217, 1219, 1222, 1224, 1231, 1242, 1264,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 1197, 1203, 365, 268,
	291, 306, 1212, 531, 481, 217, 446, 277, 240, 1230,
	1232, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 1193, 1221, 360, 497, 498,
	302, 380, 0, 0, 0, 1250, 1235, 496, 0, 1178,
	1253, 1147, 1166, 1263, 1169, 1172, 1214, 1126, 1192, 399,
	1163, 1119, 1151, 1121, 1158, 1122, 1149, 1180, 257, 1146,
	1237, 1196, 1252, 350, 254, 1128, 1152, 413, 1168, 196,
	1216, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 1259, 354, 1202, 0, 476,
	384, 0, 0, 0, 1182, 1241, 1190, 1228, 1177, 1215,
	1136, 1201, 1254, 1164, 1211, 1255, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 1160, 1208, 1249, 1161, 1210,
	252, 307, 259, 251, 501, 1260, 1240, 1125, 1189, 1248,
	0, 0, 219, 1251, 1184, 0, 1213, 0, 1266, 1120,
	1204, 0, 1123, 1127, 1262, 1244, 1155, 262, 0, 0,
	0, 0, 0, 0, 0, 1181, 1191, 1225, 1229, 1175,
	0, 0, 0, 0, 0, 0, 0, 1153, 0, 1200,
	0, 0, 0, 1132, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1179, 0, 0,
	0, 0, 1135, 0, 1154, 1226, 0, 1118, 284, 1129,
	385, 244, 0, 1233, 1243, 1176, 541, 1247, 1174, 1173,
	1220, 1133, 1239, 1167, 349, 1131, 316, 191, 215, 0,
	1165, 395, 441, 453, 1238, 1150, 1159, 242, 1157, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 1199,
	1218, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 1130, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 1145, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 1234, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 1223, 1265, 408, 452, 230, 522, 475,
	1140, 1144, 1138, 1205, 1139, 1194, 1195, 1141, 1256, 1257,
	1258, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	1227, 1134, 0, 1142, 1143, 1236, 1245, 1246, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 1198, 190,
	211, 352, 1261, 434, 275, 559, 532, 527, 197, 213,
	1137, 249, 1148, 1156, 0, 1162, 1170, 1171, 1183, 1185,
	1186, 1187, 1188, 1206, 1207, 1209, 1217, 1219, 1222, 1224,
	1231, 1242, 1264, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 1197,
	1203, 365, 268, 291, 306, 1212, 531, 481, 217, 446,
	277, 240, 1230, 1232, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 1193, 1221,
	360, 497, 498, 302, 380, 0, 0, 0, 1250, 1235,
	496, 0, 1178, 1253, 1147, 1166, 1263, 1169, 1172, 1214,
	1126, 1192, 399, 1163, 1119, 1151, 1121, 1158, 1122, 1149,
	1180, 257, 1146, 1237, 1196, 1252, 350, 254, 1128, 1152,
	413, 1168, 196, 1216, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 1259, 354,
	1202, 0, 476, 384, 0, 0, 0, 1182, 1241, 1190,
	1228, 1177, 1215, 1136, 1201, 1254, 1164, 1211, 1255, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 1160, 1208,
	1249, 1161, 1210, 252, 307, 259, 251, 501, 1260, 1240,
	1125, 1189, 1248, 0, 0, 219, 1251, 1184, 0, 1213,
	0, 1266, 1120, 1204, 0, 1123, 1127, 1262, 1244, 1155,
	262, 0, 0, 0, 0, 0, 0, 0, 1181, 1191,
	1225, 1229, 1175, 0, 0, 0, 0, 0, 0, 0,
	1153, 0, 1200, 0, 0, 0, 1132, 1124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1179, 0, 0, 0, 0, 1135, 0, 1154, 1226, 0,
	1118, 284, 1129, 385, 244, 0, 1233, 1243, 1176, 541,
	1247, 1174, 1173, 1220, 1133, 1239, 1167, 349, 1131, 316,
	191, 215, 0, 1165, 395, 441, 453, 1238, 1150, 1159,
	242, 1157, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 1199, 1218, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 561, 218, 536, 210, 1130,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 1145, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 1234, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 1223, 1265, 408, 452,
	230, 522, 475, 1140, 1144, 1138, 1205, 1139, 1194, 1195,
	1141, 1256, 1257, 1258, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 1227, 1134, 0, 1142, 1143, 1236, 1245,
	1246, 581, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 1198, 190, 211, 352, 1261, 434, 275, 559, 532,
	527, 197, 213, 1137, 249, 1148, 1156, 0, 1162, 1170,
	1171, 1183, 1185, 1186, 1187, 1188, 1206, 1207, 1209, 1217,
	1219, 1222, 1224, 1231, 1242, 1264, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 556, 557, 286, 516, 545, 0,
	0, 362, 1197, 1203, 365, 268, 291, 306, 1212, 531,
	481, 217, 446, 277, 240, 1230, 1232, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 1193, 1221, 360, 497, 498, 302, 380, 0, 0,
	0, 0, 0, 496, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	666, 0, 0, 0, 257, 671, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 678, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	89, 0, 0, 816, 800, 766, 767, 804, 817, 818,
	819, 820, 805, 0, 228, 806, 807, 235, 808, 0,
	765, 706, 708, 707, 725, 726, 727, 728, 729, 730,
	731, 704, 813, 821, 822, 0, 252, 307, 259, 251,
	501, 0, 0, 1932, 1933, 1934, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 648, 663, 0, 677,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	661, 0, 0, 0, 0, 760, 0, 662, 0, 0,
	670, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 759,
	0, 0, 541, 0, 0, 757, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 810, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 811, 812, 243, 561, 712,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 720, 721, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 770, 758, 683, 774,
	685, 771, 772, 680, 681, 684, 773, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 761, 669, 668, 0,
	676, 0, 702, 703, 705, 709, 710, 711, 722, 723,
	724, 732, 734, 735, 733, 736, 737, 738, 741, 742,
	743, 744, 739, 740, 745, 686, 690, 687, 688, 689,
	701, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 784, 785, 786, 787, 788, 789, 715, 719, 718,
	716, 717, 713, 714, 667, 190, 211, 352, 0, 434,
	275, 559, 532, 527, 197, 213, 775, 249, 776, 0,
	0, 780, 0, 0, 0, 782, 781, 0, 783, 749,
	748, 0, 0, 777, 778, 0, 779, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 790, 791, 792, 793, 794, 795, 796, 797, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 815, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 666, 0, 0,
	0, 257, 671, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 678, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 674,
	675, 0, 0, 0, 0, 0, 0, 2084, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 89, 0, 0,
	816, 800, 766, 767, 804, 817, 818, 819, 820, 805,
	0, 228, 806, 807, 235, 808, 0, 765, 706, 708,
	707, 725, 726, 727, 728, 729, 730, 731, 704, 813,
	821, 822, 2085, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 648, 663, 0, 677, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 661, 0, 0,
	0, 0, 760, 0, 662, 0, 0, 670, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 759, 0, 0, 541,
	0, 0, 757, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	810, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 811, 812, 243, 561, 712, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 720, 721, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 770, 758, 683, 774, 685, 771, 772,
	680, 681, 684, 773, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 761, 669, 668, 0, 676, 0, 702,
	703, 705, 709, 710, 711, 722, 723, 724, 732, 734,
	735, 733, 736, 737, 738, 741, 742, 743, 744, 739,
	740, 745, 686, 690, 687, 688, 689, 701, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 784, 785,
	786, 787, 788, 789, 715, 719, 718, 716, 717, 713,
	714, 667, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 775, 249, 776, 0, 0, 780, 0,
	0, 0, 782, 781, 0, 783, 749, 748, 0, 0,
	777, 778, 0, 779, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 790, 791,
	792, 793, 794, 795, 796, 797, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 815, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 0, 380, 360, 497, 498, 302, 80, 496, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 666, 0, 0, 0, 257,
	671, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 678, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 89, 0, 0, 816, 800,
	766, 767, 804, 817, 818, 819, 820, 805, 0, 228,
	806, 807, 235, 808, 0, 765, 706, 708, 707, 725,
	726, 727, 728, 729, 730, 731, 704, 813, 821, 822,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 648, 663, 0, 677, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 660, 661, 0, 0, 0, 0,
	760, 0, 662, 0, 0, 670, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 673, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 759, 0, 0, 541, 0, 0,
	757, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 810, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	811, 812, 243, 561, 712, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 720,
	721, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 770, 758, 683, 774, 685, 771, 772, 680, 681,
	684, 773, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 761, 669, 668, 0, 676, 0, 702, 703, 705,
	709, 710, 711, 722, 723, 724, 732, 734, 735, 733,
	736, 737, 738, 741, 742, 743, 744, 739, 740, 745,
	686, 690, 687, 688, 689, 701, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 784, 785, 786, 787,
	788, 789, 715, 719, 718, 716, 717, 713, 714, 667,
	190, 211, 352, 88, 434, 275, 559, 532, 527, 197,
	213, 775, 249, 776, 0, 0, 780, 0, 0, 0,
	782, 781, 0, 783, 749, 748, 0, 0, 777, 778,
	0, 779, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 790, 791, 792, 793,
	794, 795, 796, 797, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 815, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 666, 0, 0, 0, 257, 671, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 678, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 89, 0, 0, 816, 800, 766, 767, 804,
	817, 818, 819, 820, 805, 0, 228, 806, 807, 235,
	808, 0, 765, 706, 708, 707, 725, 726, 727, 728,
	729, 730, 731, 704, 813, 821, 822, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 648, 663,
	0, 677, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 661, 0, 0, 0, 0, 760, 0, 662,
	0, 0, 670, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 759, 0, 0, 541, 0, 0, 757, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 810, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 3391, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 811, 812, 243,
	561, 712, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 720, 721, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 770, 758,
	683, 774, 685, 771, 772, 680, 681, 684, 773, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 761, 669,
	668, 0, 676, 0, 702, 703, 705, 709, 710, 711,
	722, 723, 724, 732, 734, 735, 733, 736, 737, 738,
	741, 742, 743, 744, 739, 740, 745, 686, 690, 687,
	688, 689, 701, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 784, 785, 786, 787, 788, 789, 715,
	719, 718, 716, 717, 713, 714, 667, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 775, 249,
	776, 0, 0, 780, 0, 0, 0, 782, 781, 0,
	783, 749, 748, 0, 0, 777, 778, 0, 779, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 790, 791, 792, 793, 794, 795, 796,
	797, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	815, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 666,
	0, 0, 0, 257, 671, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	678, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 89,
	0, 1498, 816, 800, 766, 767, 804, 817, 818, 819,
	820, 805, 0, 228, 806, 807, 235, 808, 0, 765,
	706, 708, 707, 725, 726, 727, 728, 729, 730, 731,
	704, 813, 821, 822, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 648, 663, 0, 677, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 661,
	0, 0, 0, 0, 760, 0, 662, 0, 0, 670,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 759, 0,
	0, 541, 0, 0, 757, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 810, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 811, 812, 243, 561, 712, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 720, 721, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 770, 758, 683, 774, 685,
	771, 772, 680, 681, 684, 773, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 761, 669, 668, 0, 676,
	0, 702, 703, 705, 709, 710, 711, 722, 723, 724,
	732, 734, 735, 733, 736, 737, 738, 741, 742, 743,
	744, 739, 740, 745, 686, 690, 687, 688, 689, 701,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	784, 785, 786, 787, 788, 789, 715, 719, 718, 716,
	717, 713, 714, 667, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 775, 249, 776, 0, 0,
	780, 0, 0, 0, 782, 781, 0, 783, 749, 748,
	0, 0, 777, 778, 0, 779, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	790, 791, 792, 793, 794, 795, 796, 797, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 815, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 666, 0, 0, 0,
	257, 671, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 678, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 89, 0, 0, 816,
	800, 766, 767, 804, 817, 818, 819, 820, 805, 0,
	228, 806, 807, 235, 808, 0, 765, 706, 708, 707,
	725, 726, 727, 728, 729, 730, 731, 704, 813, 821,
	822, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 648, 663, 0, 677, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 661, 906, 0, 0,
	0, 760, 0, 662, 0, 0, 670, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 759, 0, 0, 541, 0,
	0, 757, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 810,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 811, 812, 243, 561, 712, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	720, 721, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 770, 758, 683, 774, 685, 771, 772, 680,
	681, 684, 773, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 761, 669, 668, 0, 676, 0, 702, 703,
	705, 709, 710, 711, 722, 723, 724, 732, 734, 735,
	733, 736, 737, 738, 741, 742, 743, 744, 739, 740,
	745, 686, 690, 687, 688, 689, 701, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 784, 785, 786,
	787, 788, 789, 715, 719, 718, 716, 717, 713, 714,
	667, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 775, 249, 776, 0, 0, 780, 0, 0,
	0, 782, 781, 0, 783, 749, 748, 0, 0, 777,
	778, 0, 779, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 790, 791, 792,
	793, 794, 795, 796, 797, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 815, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 666, 0, 0, 0, 257, 671, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 678, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 89, 0, 0, 816, 800, 766, 767,
	804, 817, 818, 819, 820, 805, 0, 228, 806, 807,
	235, 808, 0, 765, 706, 708, 707, 725, 726, 727,
	728, 729, 730, 731, 704, 813, 821, 822, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 648,
	663, 0, 677, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 661, 0, 0, 0, 0, 760, 0,
	662, 0, 0, 670, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 759, 0, 0, 541, 0, 0, 757, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 810, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 811, 812,
	243, 561, 712, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 720, 721, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 770,
	758, 683, 774, 685, 771, 772, 680, 681, 684, 773,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 761,
	669, 668, 0, 676, 0, 702, 703, 705, 709, 710,
	711, 722, 723, 724, 732, 734, 735, 733, 736, 737,
	738, 741, 742, 743, 744, 739, 740, 745, 686, 690,
	687, 688, 689, 701, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 784, 785, 786, 787, 788, 789,
	715, 719, 718, 716, 717, 713, 714, 667, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 775,
	249, 776, 0, 0, 780, 0, 0, 0, 782, 781,
	0, 783, 749, 748, 0, 0, 777, 778, 0, 779,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 790, 791, 792, 793, 794, 795,
	796, 797, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 815, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	666, 0, 0, 0, 257, 671, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 678, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	89, 0, 0, 816, 800, 766, 767, 804, 817, 818,
	819, 820, 805, 0, 228, 806, 807, 235, 808, 0,
	765, 706, 708, 707, 725, 726, 727, 728, 729, 730,
	731, 704, 813, 821, 822, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 677,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	661, 0, 0, 0, 0, 760, 0, 662, 0, 0,
	670, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 759,
	0, 0, 541, 0, 0, 757, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 810, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 811, 812, 243, 561, 712,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 720, 721, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 770, 758, 683, 774,
	685, 771, 772, 680, 681, 684, 773, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 761, 669, 668, 0,
	676, 0, 702, 703, 705, 709, 710, 711, 722, 723,
	724, 732, 734, 735, 733, 736, 737, 738, 741, 742,
	743, 744, 739, 740, 745, 686, 690, 687, 688, 689,
	701, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 784, 785, 786, 787, 788, 789, 715, 719, 718,
	716, 717, 713, 714, 667, 190, 211, 352, 0, 434,
	275, 559, 532, 527, 197, 213, 775, 249, 776, 0,
	0, 780, 0, 0, 0, 782, 781, 0, 783, 749,
	748, 0, 0, 777, 778, 0, 779, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 790, 791, 792, 793, 794, 795, 796, 797, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 815, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1323, 1322, 1324, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 561, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 556, 557, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 976, 541, 0, 0, 0,
	0, 0, 973, 974, 349, 934, 316, 191, 215, 967,
	971, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 1461, 800, 0, 0, 1458, 0,
	0, 0, 0, 1456, 0, 228, 1457, 1455, 235, 1460,
	0, 765, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 0, 380, 360, 497, 498,
	302, 80, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 89,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 88, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 2071, 0, 0, 2070, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 1521, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 1523, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 1525,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 1295, 0,
	1296, 1297, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	0, 380, 360, 497, 498, 302, 80, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 89, 0, 1498, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 88, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 89, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 2019, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 1702, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 2017, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 349, 934, 316, 191, 215,
	932, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 559, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 2019, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 1702, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 1498, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 3301, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 1852,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 2422, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 2407,
	0, 0, 0, 0, 228, 0, 0, 235, 2408, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 510, 511, 243, 561, 218,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 368, 465, 519, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 533, 534,
	538, 442, 443, 444, 445, 279, 528, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 559, 532, 527, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 287, 288, 426, 427, 300, 301, 556, 557, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 1544, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	1543, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 561, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 556, 557, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 629, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 3426, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 1702, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 541, 0, 0,
	0, 3301, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 559, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 89, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 2072, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 1525,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 1807, 434, 275, 559, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 1799, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 510, 511, 243, 561, 218,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 368, 465, 519, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 533, 534,
	538, 442, 443, 444, 445, 279, 528, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 559, 532, 527, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 287, 288, 426, 427, 300, 301, 556, 557, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 1669, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 561, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 556, 557, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 1667, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 1665, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 1663, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 1661, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 559, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 1657,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 1655, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 1653, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 1628, 0, 0, 0, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 1529, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 510, 511, 243, 561, 218,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 368, 465, 519, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 533, 534,
	538, 442, 443, 444, 445, 279, 528, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 559, 532, 527, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 287, 288, 426, 427, 300, 301, 556, 557, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 89, 0, 0,
	0, 800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 561, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 556, 557, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 1277, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 584, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 559, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 3434, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	0, 0, 360, 497, 498, 302,
}

var yyPact = [...]int{
	-1000, -1000, 4609, -1000, -447, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2283, 2329,
	-1000, -1000, -1000, -1000, 2410, -1000, 839, 1860, -1000, 2194,
	311, -1000, 47879, 590, -1000, 45291, 589, 124, 31057, -1000,
	250, -1000, 207, 46585, 244, -1000, -1000, -1000, -275, 20056,
	2148, 77, 76, 47879, -1000, -1000, -1000, -1000, 2337, 1844,
	-1000, 402, -1000, -1000, -1000, -1000, -1000, -1000, 44644, -1000,
	959, -1000, -1000, 2206, 2211, 2078, 746, 2137, -1000, 2248,
	1844, -1000, 20056, 2368, 2260, 19409, 19409, 510, -1000, -1000,
	249, -1000, -1000, 26528, 47879, 33645, 485, -1000, 2194, -1000,
	-1000, -1000, 163, -1000, 412, 1762, -1000, 1761, -1000, 776,
	560, 440, 549, 544, 439, 434, 431, 428, 427, 421,
	419, 418, 449, -1000, 807, 807, -109, -112, 674, 520,
	497, 497, 833, 537, 2171, 2163, -1000, -1000, 807, 807,
	807, 375, 807, 807, 807, 807, 384, 379, 807, 807,
	807, 807, 807, 807, 807, 807, 807, 807, 807, 807,
	807, 807, 807, 807, 807, 410, 2194, 361, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47879, 220, 47879, -1000, 684, 47879, 898, 898,
	219, 898, 898, 898, 898, 216, 729, 65, -1000, 185,
	373, 248, 354, 912, 655, -1000, -1000, 341, 912, 1646,
	-1000, 775, 181, -1000, 898, 898, -1000, 13561, 153, 13561,
	13561, -1000, 2188, -1000, -1000, -1000, -1000, -1000, 1156, -1000,
	-1000, -1000, -1000, -1000, 536, -1000, -1000, -1000, -1000, 46585,
	43997, -1000, -1000, 247, -1000, -1000, 1678, 1202, 20056, 1170,
	-1000, 2775, 719, -1000, -1000, -1000, -1000, -1000, 650, -1000,
	20703, 20703, 20703, 20703, -1000, -1000, 1764, 43350, 1764, 1764,
	20703, 1764, -1000, 20703, 1764, 1764, 1764, 20056, 1764, 1764,
	1764, 1764, -1000, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, -1000, -1000, -1000, -1000, 1764, 683, 1764, 1764, 1764,
	1764, 1764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1764, 1764, 1764, 1764, 1764, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22644,
	1332, 1324, 1279, -1000, 17468, 1764, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 47879, -1000, 1764, 270,
	46585, 46585, 413, 2248, 1844, -1000, 2337, 2336, 402, -1000,
	2673, 1405, 1327, 1376, 1844, 1745, 47879, -1000, 1781, -1000,
	-1000, -1000, -210, -227, 2069, 1223, 1644, -1000, -1000, -1000,
	-1000, 1826, 20056, -1000, -1000, 2407, -1000, 23939, 680, 2404,
	42703, -1000, 510, 510, 1759, 498, 42, -1000, -1000, -1000,
	-1000, 824, 30410, -1000, -1000, -1000, -1000, 1650, 47879, -1000,
	-1000, 4243, 1040, -1000, 1858, -1000, 1642, -1000, 1801, 20056,
	1875, 588, 1040, 569, 568, 545, -1000, -17, -1000, -1000,
	-1000, -1000, -1000, -1000, 807, 807, 807, -1000, 447, 2365,
	311, 3911, -1000, -1000, -1000, 42056, 1857, 1040, -1000, 1855,
	-1000, 893, 610, 658, 658, 1040, -1000, -1000, 47232, 1040,
	890, 888, 1040, 1040, 46585, 46585, -1000, 41409, -1000, 40762,
	40115, 1140, 46585, 39468, 38821, 38174, 37527, 36880, -1000, 1957,
	-1000, 1840, -1000, -1000, -1000, 47232, 1040, 1040, 47232, 46585,
	47232, 47879, 1040, -1000, -1000, 359, -1000, -1000, 1128, 1125,
	1124, 807, 807, 1115, 1615, 1603, 1594, 807, 807, 1112,
	1591, 32351, 1586, 325, 1108, 1104, 1103, 1143, 1584, 201,
	1566, 1127, 1036, 1102, 46585, 1852, 47879, -1000, 340, 769,
	550, 823, 2194, 2145, 1752, 534, 584, 1040, 505, 505,
	46585, -1000, 14214, -1000, -1000, 1555, 20056, -1000, 914, 912,
	912, -1000, -1000, -1000, -1000, -1000, -1000, 898, 47879, 914,
	-1000, -1000, -1000, 912, 898, 47879, 898, 898, 898, 898,
	912, 912, 912, 898, 47879, 47879, 47879, 47879, 47879, 47879,
	47879, 47879, 47879, 13561, 775, 898, -300, -1000, 1550, -1000,
	1938, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13561, 13561, -1000,
	-1000, -1000, -1000, 232, -1000, 36233, 448, 822, -1000, 1750,
	35586, -1000, -311, -314, -317, -328, -1000, -1000, -1000, -359,
	-362, -1000, -1000, -1000, 20056, 20056, 20056, 20056, -143, -1000,
	1021, 20703, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 147,
	952, 20703, 20703, 20703, 20703, 20703, 20703, 20703, 20703, 20703,
	20703, 20703, 20703, 20703, 20703, 20703, -1000, -1000, 28469, 5776,
	5776, 719, 719, 719, 719, -1000, -82, 1749, 47232, -1000,
	-1000, -1000, 672, 20056, 20056, 719, -1000, 1040, 17468, 21350,
	19409, 19409, 20056, 838, 1202, 47232, 20056, -1000, 1376, -1000,
	-1000, -1000, 1039, -1000, 897, 2178, 2178, 2178, 2178, 20056,
	20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056, 2178,
	46585, 46585, 1286, 20056, 20056, 20056, 20056, 20056, 20056, 16173,
	20056, 20056, 20703, 20056, 20056, 20056, 1376, 20056, 20056, 20056,
	20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056,
	20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056,
	20056, 20056, 20056, 20056, 1376, 20056, 1246, 20056, 20056, 19409,
	15520, 19409, 19409, 19409, 19409, 19409, -1000, -1000, -1000, -1000,
	-1000, 20056, 20056, 20056, 20056, 20056, 20056, 20056, 20056, 1376,
	20056, 20056, 20056, 20056, 20056, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1410, 1407, 1278, 20056, -1000,
	1747, -1000, -142, 25881, 20056, 1541, 2402, 1896, 46585, -1000,
	-1000, -1000, 2248, -1000, 2248, 1410, 2173, 2087, 19409, -1000,
	-1000, 2173, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1559, -1000, 47879, 1745, 2242, 46585, -1000, -175, -1000, -177,
	2020, 1473, 370, -1000, 20056, 20056, 1723, -1000, 1392, 47879,
	-1000, -143, -1000, 34939, -1000, -1000, 12908, 47879, 414, 47879,
	-1000, 25234, 34292, 261, 42, -1000, 1712, -1000, 45, 24,
	16820, 705, -1000, -1000, -1000, 674, 21997, 1670, 705, 161,
	-1000, -1000, -1000, 1801, -1000, 1801, 1801, 1801, 1801, 370,
	370, 370, 370, -1000, -1000, -1000, -1000, -1000, 1847, 1835,
	-1000, 1801, 1801, 1801, 1801, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1833, 1833, 1833, 1802, 1802, 491, -1000, 20056,
	365, 33645, 2246, 1100, 2026, 340, 508, 1886, 1040, 1040,
	1040, 508, -1000, 1240, 1198, 1196, -1000, -439, 1722, -1000,
	-1000, 2363, -1000, -1000, 957, 921, 917, 794, 46585, 295,
	405, -1000, 492, -1000, 33645, 1040, 886, 658, 1040, -1000,
	1040, -1000, -1000, -1000, -1000, -1000, 1040, -1000, -1000, 1719,
	-1000, 1746, 991, 916, 948, 907, 1719, -1000, -1000, -87,
	1719, -1000, 1719, -1000, 1719, -1000, 1719, -1000, 1719, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 799, 236,
	-208, 46585, 295, 519, -1000, 514, 28469, -1000, -1000, -1000,
	28469, 28469, -1000, -1000, -1000, -1000, 1469, 1459, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -420, 47879, -1000,
	332, 820, 388, 424, 362, 47879, 312, 2290, 2286, 2274,
	2263, 2256, 318, 378, 47879, 47879, 505, 1954, 47879, 2219,
	47879, -1000, -1000, -1000, -1000, -1000, 1202, 47879, -1000, -1000,
	898, 898, -1000, -1000, 47879, 898, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 898, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47879, -1000, -1000, -1000, -1000, 46585, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -27, 170, 43, 385, -1000,
	-1000, -1000, -1000, -1000, 2304, -1000, 1202, 874, 855, -1000,
	1764, -1000, -1000, 1002, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 147, 20703, 20703, 20703, 1431, 562, 1651, 1236, 1109,
	1126, 1126, 832, 832, 712, 712, 712, 712, 712, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1442, -1000, 1764,
	47232, 1609, 15520, 1623, 1871, 1376, 3057, -1000, 1583, -1000,
	1583, 1562, 835, -1000, 20056, 1376, 3047, -1000, -1000, 1376,
	1376, 1376, 20056, -1000, -1000, 20056, 20056, 20056, 20056, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 20056,
	1717, 1715, 2400, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1487, 2026, 2026, 2026, 2026, 2026,
	20056, 2113, -1000, -1000, -1000, 1339, 2998, 1309, 2983, 2026,
	2026, -1000, 2026, 2866, 2862, 1376, 1678, 1376, 1714, -1000,
	2844, 2026, 2822, 2785, 2758, 1917, 2750, 2730, 2720, 2026,
	2026, 2026, 1907, 2702, 2686, 2631, 2619, 2608, 2604, 2581,
	2563, 2432, 2026, -146, 2026, 1376, -1000, -1000, -1000, -1000,
	-1000, 2427, 1881, 1376, 1713, 1764, 668, -1000, -1000, 1583,
	1376, 1376, 1583, 1583, 2356, 2342, 2325, 2316, 2312, 2308,
	2026, 2026, -1000, 2026, 2301, 2287, 1776, 1771, 1376, -1000,
	1278, 47879, -1000, -287, -1000, 26, 754, 1764, -1000, 32351,
	1376, -1000, 4765, -1000, 999, -1000, -1000, -1000, -1000, -1000,
	29763, 1649, 2173, -1000, -1000, 1764, 1565, -1000, -1000, -1000,
	-1000, 370, 98, 29116, 699, 699, 190, 1202, 1202, 20056,
	-1000, -1000, -1000, -1000, -1000, -1000, 666, 2379, 503, 1764,
	-1000, 1711, 2434, -1000, -1000, -1000, 2239, 23292, -1000, -1000,
	1764, 1764, 47879, 1655, 1577, -1000, 661, -1000, 1162, 1712,
	42, 33, -1000, -1000, -1000, -1000, 1202, -1000, 1174, 415,
	598, -1000, 476, -1000, -1000, -1000, -1000, 2159, 125, -1000,
	-1000, -1000, 316, 370, -1000, -1000, -1000, -1000, -1000, -1000,
	1438, 1438, -1000, -1000, -1000, -1000, -1000, 1096, -1000, -1000,
	-1000, 1091, -1000, -1000, 2279, 1932, 365, -1000, -1000, 807,
	1428, -1000, -1000, 2154, 807, 807, 46585, -1000, -1000, 1658,
	2246, 332, 47879, 843, 1952, -1000, 1886, 1886, 1886, 47879,
	-1000, -1000, -1000, -1000, -1000, -1000, -426, 71, 380, -1000,
	-1000, -1000, 3735, 46585, 1546, -1000, 292, -1000, 1656, -1000,
	46585, -1000, 1529, 1832, 1040, 1040, -1000, -1000, -1000, 46585,
	1764, -1000, -1000, -1000, -1000, 573, 2191, 323, -1000, -1000,
	-163, -1000, -1000, 295, 292, 47232, 1040, 705, -1000, -1000,
	-1000, -1000, -1000, -427, 1527, 552, 301, 337, 47879, 47879,
	47879, 47879, 47879, 617, -1000, -1000, 56, -1000, -1000, 256,
	-1000, -1000, -1000, -1000, 256, -1000, -1000, -1000, -1000, 363,
	509, -1000, 47879, 47879, 664, -1000, -1000, -1000, 912, -1000,
	-1000, 912, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2186, 47879, 41, -387, -1000, -380, 20056, -1000,
	-1000, -1000, -1000, 1207, 553, 1651, 20703, 20703, 20703, -1000,
	-1000, -1000, 922, 922, 28469, -1000, 20056, 19409, -1000, -1000,
	20056, 20056, 831, -1000, 20056, 1037, -1000, 20056, -1000, -1000,
	-1000, 1278, 2026, 2026, 2026, 2026, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1739, 20056, 20056, 20056,
	1376, 357, -1000, -1000, -1000, -1000, -1000, 2399, -1000, 20056,
	-1000, 28469, 20056, 20056, 20056, -1000, -1000, -1000, 20056, 20056,
	-1000, -1000, 20056, 20056, -1000, 20056, 20056, 20056, -1000, 20056,
	20056, 20056, 20056, -1000, -1000, -1000, -1000, 20056, 20056, 20056,
	20056, 20056, 20056, 20056, 20056, 20056, 20056, -1000, -1000, 33645,
	126, -146, 1246, 126, 1246, -1000, 19409, 14867, -1000, -1000,
	-1000, -1000, -1000, 20056, 20056, 20056, 20056, 20056, 20056, -1000,
	-1000, -1000, 20056, 20056, -1000, 20056, -1000, 20056, -1000, -1000,
	-1000, -1000, -1000, 754, -1000, 658, 658, 658, 46585, -1000,
	-1000, -1000, -1000, 1710, -1000, 2320, -1000, 2102, 2096, 2388,
	2379, -1000, 25234, 2173, -1000, -1000, 46585, -274, -1000, 2142,
	2129, 699, 699, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12255, 2248, 20056, 1951, 47232, 148, -1000, 24587, 46585, 47232,
	25234, 25234, 25234, 25234, 25234, -1000, 1973, 1966, -1000, 1985,
	1983, 2094, 47879, -1000, 1410, 1525, -1000, 20056, 27175, 1664,
	25234, -1000, -1000, 25234, 47879, 11602, -1000, -1000, 34, 19,
	-1000, -1000, -1000, -1000, 674, -1000, -1000, 465, 2230, 2153,
	-1000, -1000, -1000, -1000, -1000, 1519, -1000, 1497, 1708, 1494,
	236, -1000, 1869, 2182, 807, 807, -1000, 1087, -1000, 1040,
	1426, 1424, -1000, -1000, -1000, 542, -1000, 2215, 47879, 1948,
	1947, 1941, -1000, -436, 1085, 1820, 1772, 20056, 1818, 2360,
	1693, 46585, -1000, -1000, 47232, -1000, 290, -1000, 365, 46585,
	-1000, -1000, -1000, 405, 47879, -1000, 5235, -1000, -1000, -1000,
	292, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47879, 360,
	-1000, 1816, 1130, -1000, -1000, 1785, -1000, -1000, -1000, -1000,
	271, 387, 1412, 254, 1380, 254, -1000, 47879, 660, 1932,
	47879, -1000, -1000, -1000, 898, 898, -1000, -1000, 2174, -1000,
	1040, 2026, 20703, 20703, -1000, 719, 315, -125, 1801, 1801,
	-1000, 1801, 1802, -1000, 1801, 233, 1801, 221, 1801, -1000,
	-1000, 1376, 1376, 1278, -1000, 1690, 1767, -1000, 1202, 20056,
	2266, -1000, -1000, -1000, -1000, -1000, -25, 2245, 2240, 2026,
	-1000, 1800, 1797, 20056, 2026, 1376, 1607, 2026, 2026, 2026,
	2026, -1000, 1202, 1278, 2231, 1278, 2026, 2026, 2200, 333,
	2026, 1491, 1491, 1491, 1491, 1491, 1278, 1278, 1278, 1278,
	46585, -1000, -146, -1000, -1000, -186, -188, -1000, 1376, -146,
	1707, 1376, -1000, 1549, 1544, 2183, 1536, 2026, 1931, 2026,
	2026, 2026, 1481, -1000, 2284, 2284, 2284, 1447, 999, 47879,
	-1000, -1000, -1000, -1000, 2379, 2377, 1695, -1000, -1000, 98,
	463, -1000, 2126, 2129, -1000, 2354, 2135, 2351, -1000, -1000,
	-1000, -1000, -1000, 1202, -1000, 2199, 1663, -1000, 818, 1679,
	-1000, -1000, 18762, 1457, 2093, 659, 1447, 1740, 2434, 1894,
	1940, 3136, -1000, -1000, -1000, -1000, 1965, -1000, 1791, -1000,
	-1000, 1781, -1000, 1912, 414, 25234, 1737, 1737, -1000, 657,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 931, 5061, 2422,
	-1000, 1362, -1000, 1147, 196, 1084, -1000, -1000, 807, 807,
	-1000, 875, 872, -1000, 47879, 1792, -1000, 370, 1348, 370,
	1075, -1000, 1070, -1000, -1000, -1000, -1000, 1760, 1918, -1000,
	-1000, -1000, -1000, 47879, -1000, -1000, 47879, 47879, 47879, 1790,
	2349, -1000, 20056, 1787, 817, 2162, 46585, 46585, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 507,
	807, -403, 372, 368, 807, 807, 807, -438, -1000, -1000,
	1423, 1421, -1000, -110, -1000, 20056, -1000, -1000, -1000, 1093,
	1093, 1332, 1324, 1279, -1000, 1781, -1000, -1000, -1000, 1652,
	-1000, -1000, -98, 46585, 46585, 46585, 46585, -1000, -1000, 966,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 719, 1376, 348, -100, 1376, -1000, -1000, 370,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20056, -1000, 20056, -1000, 1202, 20056, 2248, 1272, 20056, 20056,
	-1000, 1067, 1056, 2026, -1000, -1000, -1000, 20056, -1000, -1000,
	-1000, -1000, -1000, 20056, -1000, -1000, -1000, 20056, 283, 922,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1376, 411, -1000, -1000, -1000, -1000, 2386, -1000, 1376, 20056,
	-1000, -1000, 20056, -1000, 20056, 20056, -1000, 20056, -1000, 20056,
	-1000, -1000, -1000, -1000, 20056, 1764, 2152, 1764, 1764, 27175,
	-1000, -1000, 2377, 2372, 2346, 2119, 2122, 2122, 2126, -1000,
	2344, 2333, -1000, 1268, 2332, 1264, 870, -1000, 47232, 20056,
	148, -1000, 404, 46585, 148, 46585, -1000, 2321, -1000, -1000,
	20056, 1786, -1000, 20056, -1000, -1000, -1000, -1000, 5776, 2379,
	1737, -1000, -1000, 738, -1000, 20056, -1000, -1000, -1000, 3738,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1250, 1242,
	-1000, -1000, 1783, 20056, -1000, -1000, -1000, 1643, 1547, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1781, -1000, -1000,
	-1000, -1000, 405, -432, 2158, 46585, 1033, -1000, 1417, 1693,
	392, 148, 1226, 807, 807, 807, 996, 984, 32351, 1398,
	-1000, 46585, 461, -1000, 405, -1000, -115, -117, 2026, -1000,
	-1000, 2227, -1000, -1000, 14867, -1000, -1000, 1780, 1880, -1000,
	-1000, -1000, -1000, 2008, -85, -104, -1000, -1000, 2026, 2026,
	1378, 1376, -1000, 2026, 2026, 1450, 1434, -1000, 2026, 1278,
	1449, -1000, 283, 1376, 1926, -1000, -1000, 5776, -1000, -1000,
	2321, 2327, 126, -1000, -1000, 272, 126, 1202, 1433, 2026,
	1419, 1415, 2026, 2026, 27822, -1000, 2311, 2310, 32998, 32998,
	754, 2372, -153, 20056, 20056, 2115, 1016, -1000, -1000, -1000,
	-1000, 1210, 1194, -1000, 1179, -1000, 2421, -1000, 1202, -1000,
	148, -1000, 656, 1679, -1000, 2248, 1202, 46585, 1202, 95,
	2321, -1000, 2026, -1000, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764, 1764,
	1764, 1764, 1764, 1764, -1000, -1000, 46585, 2125, -1000, -1000,
	2224, 1395, 70, -1000, 1411, 1693, -1000, -1000, 144, -1000,
	20056, -1000, 32351, 1169, 1167, -1000, -1000, -1000, -1000, -438,
	-1000, -1000, -1000, -1000, -1000, -1000, 402, 1685, -1000, 784,
	46585, 47879, -1000, 1981, -1000, -1000, -1000, 20056, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20056, -1000, 1376, 1905,
	-1000, -269, -1000, -406, 20056, -146, -1000, -1000, -146, -1000,
	20056, -1000, -1000, 20056, -1000, 20056, -1000, -1000, 1375, -1000,
	-1000, -1000, -1000, -1000, 1375, 1375, -1000, -153, -1000, 1682,
	-1000, 46585, 1202, 1678, -1000, 995, -1000, -1000, -1000, -1000,
	-1000, 47232, 1679, 46585, -1000, 1354, 1376, 1764, 2248, -1000,
	1345, -1000, 402, -1000, 1774, 1772, -1000, -1000, -1000, 18115,
	-1000, -1000, -1000, -1000, -1000, 203, -96, 14867, 10949, 1322,
	-1000, -91, 2026, 1278, -1000, -373, -1000, -1000, -1000, -1000,
	142, -1000, -1000, 1678, -1000, -1000, 1356, 1351, 1173, 31704,
	-1000, -1000, -1000, -1000, -153, -1000, -1000, 2222, -1000, -1000,
	1672, -1000, -1000, 27175, 45938, -1000, -80, 467, -96, 20056,
	1765, 1376, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	31, -1000, -1000, 647, -1000, -1000, -1000, 1785, -101, -1000,
	-1000, -1000, 224, -393, -182, -183, -1000, -1000, 20703, -1000,
	20056, -1000, 20056, -1000, 20056, -1000, -1000, -1000, 46585, 1764,
	-1000, 1257, -1000, 3378, -199, 1904, -1000, -22, -1000, -1000,
	-1000, 920, 1165, -1000, -1000, -1000, -1000, -1000, -1000, 2083,
	46585, -1000, 489, -1000, -1000, 14214, -98, -108, 851, -1000,
	-1000, -1000, -1000, -1000, 1129, 1014, 2026, -1000, 46585, -1000,
	45938, -194, 705, 5776, -1000, 1902, 1900, 2385, -1000, -1000,
	-1000, -1000, -1000, -1000, -444, 1248, 338, -1000, -1000, -1000,
	224, -1000, 20056, -1000, 20056, -1000, 1376, -1000, -1000, 2213,
	95, -1000, 2420, -1000, 2418, 709, 709, -1000, 974, -444,
	-1000, -1000, 2026, 2026, -1000, -200, -1000, -1000, -1000, -1000,
	-1000, 468, 1035, -1000, -1000, -1000, -1000, -1000, 5776, -1000,
	-1000, -1000, 285, 285, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2979, 2977, 42, 7, 39, 37, 2974, 87, 108,
	205, 71, 206, 103, 2973, 2969, 2967, 2966, 2965, 2962,
	2960, 184, 183, 182, 2958, 2957, 2956, 2955, 2953, 2952,
	2951, 2933, 2928, 2925, 178, 170, 197, 2923, 2922, 2919,
	126, 200, 92, 94, 201, 2917, 2916, 82, 2911, 2907,
	2906, 194, 193, 192, 871, 2905, 187, 129, 58, 2901,
	2898, 2896, 2895, 2893, 2890, 2888, 2887, 2886, 2885, 2884,
	2881, 2879, 2878, 2877, 2875, 2868, 250, 2865, 2863, 24,
	2860, 84, 2858, 2855, 2854, 2853, 11, 2852, 2851, 15,
	40, 2849, 2842, 52, 2834, 2833, 2831, 2830, 2829, 21,
	2824, 28, 2820, 31, 2812, 2810, 139, 2807, 2805, 2804,
	41, 2803, 2802, 2801, 2799, 2798, 2797, 2796, 147, 2793,
	2792, 2791, 175, 209, 2788, 2786, 174, 118, 119, 2785,
	2784, 120, 196, 2783, 134, 2781, 2780, 2779, 157, 2778,
	690, 2777, 2776, 70, 62, 2769, 69, 2767, 2766, 10,
	99, 72, 9, 22, 4, 2765, 2764, 67, 96, 2763,
	114, 2759, 2757, 109, 81, 2753, 111, 116, 2752, 2751,
	16, 6, 2748, 2, 1, 5, 65, 2744, 2736, 128,
	2735, 2733, 2732, 102, 2731, 2730, 48, 2729, 95, 144,
	112, 79, 2727, 53, 57, 2726, 2725, 2721, 2718, 2716,
	56, 2715, 2711, 2710, 146, 55, 171, 2709, 43, 46,
	63, 148, 2708, 76, 91, 203, 176, 2703, 2701, 143,
	150, 2699, 2695, 73, 45, 51, 2694, 101, 142, 132,
	44, 98, 151, 2691, 2689, 64, 78, 2688, 2687, 2686,
	2685, 177, 2681, 2666, 77, 2663, 66, 2661, 195, 2660,
	17, 68, 2658, 49, 173, 2657, 127, 2640, 2639, 74,
	110, 75, 50, 2633, 172, 2624, 59, 168, 137, 164,
	2617, 2614, 2613, 2611, 202, 358, 2610, 2605, 80, 180,
	153, 156, 93, 2600, 368, 2598, 2591, 20, 2262, 7485,
	2590, 38, 165, 2589, 2588, 6346, 23, 107, 32, 2581,
	123, 2575, 2572, 2570, 2564, 223, 179, 117, 166, 60,
	2563, 2562, 2550, 19, 2544, 2543, 2540, 2539, 2538, 2537,
	85, 36, 35, 34, 217, 106, 13, 113, 160, 83,
	2533, 2527, 2526, 131, 100, 2524, 162, 161, 135, 198,
	2523, 186, 149, 133, 2522, 97, 33, 2521, 2518, 2517,
	2514, 105, 2513, 2512, 2510, 2499, 159, 154, 136, 86,
	2496, 89, 130, 155, 152, 54, 2493, 61, 2492, 2489,
	30, 199, 29, 2488, 18, 115, 121, 2487, 5539, 189,
	2480, 25, 366, 158, 2478, 2475, 8, 12, 14, 2465,
	2463, 2462, 2461, 145, 2460, 2459, 2452, 2446, 27, 47,
	26, 3, 124, 88, 2445, 2441, 5067, 0, 140, 2437,
	204,
}

//line sql.y:7891
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 404, 405, 405, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 256, 378,
	379, 379, 254, 254, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 408, 408, 181, 181, 179, 179, 180, 180, 259,
	259, 24, 25, 25, 269, 269, 268, 268, 268, 270,
	270, 270, 270, 308, 308, 308, 26, 26, 26, 26,
	26, 124, 124, 381, 381, 380, 374, 374, 373, 373,
	372, 377, 377, 376, 376, 375, 38, 39, 48, 48,
	48, 48, 49, 50, 382, 382, 347, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 349, 349, 335, 335, 348, 348, 348,
	348, 348, 348, 348, 334, 334, 135, 135, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 397, 397, 397, 396, 396,
	234, 234, 234, 234, 234, 234, 234, 234, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	156, 156, 152, 152, 152, 153, 153, 153, 154, 154,
	398, 398, 398, 398, 313, 313, 313, 313, 316, 316,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 315,
	315, 315, 315, 315, 317, 317, 317, 317, 317, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 319, 319, 319, 319, 319,
	319, 319, 319, 333, 333, 320, 320, 328, 328, 329,
	329, 329, 330, 330, 330, 331, 331, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 327, 327, 326, 326,
	326, 336, 361, 361, 360, 360, 358, 358, 358, 358,
	358, 358, 358, 358, 345, 345, 355, 355, 355, 355,
	355, 344, 344, 340, 340, 340, 341, 341, 342, 342,
	339, 339, 343, 343, 357, 357, 356, 356, 337, 337,
	338, 338, 363, 399, 399, 399, 399, 399, 400, 400,
	364, 389, 391, 391, 391, 390, 390, 387, 388, 386,
	386, 386, 386, 386, 81, 81, 81, 282, 282, 283,
	283, 353, 353, 352, 352, 352, 354, 354, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 277,
	277, 277, 385, 385, 385, 385, 385, 385, 384, 384,
	384, 350, 350, 350, 350, 383, 383, 57, 57, 214,
	214, 402, 402, 403, 403, 403, 45, 45, 45, 45,
	45, 45, 44, 44, 44, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 46, 46, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 106, 106, 107, 107,
	107, 107, 109, 109, 109, 366, 366, 58, 58, 3,
	3, 169, 171, 172, 172, 170, 170, 170, 170, 170,
	170, 60, 60, 59, 59, 174, 173, 175, 175, 175,
	1, 1, 2, 2, 4, 4, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 332, 332,
	332, 365, 365, 367, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 112, 111, 111, 110, 113, 113,
	113, 113, 113, 113, 113, 113, 369, 369, 369, 61,
	61, 370, 321, 322, 323, 5, 6, 346, 368, 120,
	120, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	62, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 276, 276, 285, 285, 275, 275, 300, 300,
	300, 278, 278, 278, 279, 279, 395, 395, 395, 272,
	272, 64, 64, 64, 301, 301, 301, 301, 66, 66,
	67, 68, 68, 303, 303, 304, 304, 69, 70, 82,
	82, 82, 82, 82, 82, 82, 105, 105, 105, 15,
	15, 15, 15, 78, 78, 78, 14, 14, 65, 65,
	72, 392, 392, 393, 394, 394, 394, 394, 73, 75,
	31, 31, 31, 31, 31, 31, 130, 130, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	125, 125, 125, 119, 119, 409, 76, 77, 77, 123,
	123, 123, 116, 116, 116, 122, 122, 122, 16, 16,
	17, 258, 258, 18, 18, 127, 127, 129, 129, 129,
	129, 129, 131, 131, 131, 131, 131, 131, 131, 126,
	126, 128, 128, 128, 128, 293, 293, 293, 292, 292,
	163, 163, 165, 164, 164, 166, 166, 167, 167, 167,
	167, 212, 212, 189, 189, 251, 251, 252, 252, 250,
	250, 257, 257, 253, 253, 253, 253, 260, 260, 168,
	168, 168, 168, 176, 176, 177, 177, 178, 178, 302,
	302, 298, 298, 298, 297, 297, 182, 182, 182, 184,
	183, 183, 183, 183, 185, 185, 187, 187, 186, 186,
	188, 193, 193, 192, 192, 190, 190, 190, 190, 191,
	191, 191, 191, 194, 194, 140, 140, 140, 140, 140,
	140, 140, 155, 155, 155, 155, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 241, 241, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 149, 217, 217,
	216, 216, 83, 83, 83, 84, 84, 85, 85, 85,
	85, 85, 86, 86, 86, 86, 86, 141, 141, 88,
	88, 87, 87, 207, 207, 290, 290, 89, 90, 90,
	93, 93, 92, 91, 91, 97, 97, 94, 94, 96,
	96, 95, 98, 98, 99, 100, 100, 273, 273, 195,
	195, 203, 203, 203, 203, 196, 196, 196, 196, 196,
	196, 196, 204, 204, 204, 211, 205, 205, 201, 201,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 160, 160, 160, 160,
	222, 222, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 148, 148, 161,
	161, 161, 161, 162, 162, 162, 162, 162, 162, 162,
	310, 310, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 410, 410, 324, 324, 324, 324, 202,
	202, 202, 202, 202, 121, 121, 121, 121, 121, 307,
	307, 307, 311, 311, 311, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	312, 312, 220, 220, 117, 117, 218, 218, 219, 221,
	221, 213, 213, 213, 213, 215, 215, 198, 198, 198,
	223, 223, 224, 224, 101, 102, 102, 103, 103, 225,
	225, 227, 226, 226, 228, 229, 229, 229, 230, 230,
	231, 231, 231, 47, 47, 47, 47, 47, 42, 42,
	42, 42, 43, 43, 43, 43, 132, 132, 132, 132,
	134, 134, 133, 133, 79, 79, 80, 80, 80, 138,
	138, 139, 139, 139, 136, 136, 137, 137, 248, 248,
	248, 248, 248, 248, 248, 232, 232, 232, 239, 239,
	239, 235, 235, 237, 237, 237, 238, 238, 238, 236,
	245, 245, 247, 247, 246, 246, 242, 242, 243, 243,
	244, 244, 244, 240, 240, 197, 197, 197, 197, 197,
	249, 249, 249, 249, 261, 261, 208, 208, 210, 210,
	209, 209, 159, 262, 262, 266, 263, 263, 267, 267,
	267, 267, 255, 255, 255, 264, 264, 265, 265, 294,
	294, 294, 271, 271, 284, 284, 280, 280, 281, 281,
	274, 274, 286, 286, 286, 74, 206, 206, 362, 362,
	359, 289, 289, 291, 291, 295, 295, 299, 299, 296,
	296, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 406, 407, 305, 306, 306, 306,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 2, 0, 2, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 5, 5, 4, 4, 4, 6,
	5, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 3, 3, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	1, 1, 2, 3, 7, 0, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 7, 7, 6,
	6, 2, 2, 1, 6, 3, 3, 3, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 0,
	1, 2, 5, 0, 3, 0, 1, 4, 4, 2,
	0, 1, 1, 2, 2, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 5, 1, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 4, 8, 6, 8, 6, 5, 4, 10, 2,
	2, 1, 2, 2, 2, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 8, 8, 8, 6, 5, 4, 4, 4, 4,
	4, 7, 4, 4, 6, 6, 6, 8, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 6, 5, 9,
	6, 9, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 6, 8, 10, 12, 14, 6, 8, 8,
	10, 12, 14, 6, 8, 10, 12, 6, 8, 4,
	4, 3, 4, 6, 6, 4, 6, 4, 6, 8,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 3,
	4, 2, 3, 4, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -404, -76, -409, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 10, 11, -104, -33, 33, -38, -48, 225, -49,
	-39, 226, -50, 228, 227, 264, 229, 257, 75, 311,
	312, 314, 315, 316, 317, -105, 262, 263, 231, 37,
	46, 34, 35, 38, 235, 270, 271, 234, -10, -34,
	9, -406, 12, 443, 259, 258, 29, -12, 505, 87,
	-77, -405, 657, -248, -232, 23, 34, 30, -231, -227,
	-123, -232, 21, 19, 8, -76, -76, -76, 13, 14,
	-76, -347, -349, 87, 159, 87, -76, -55, -54, -52,
	-51, -53, -56, 32, -45, -46, -371, -44, -41, 230,
	227, 274, 123, 124, 264, 265, 266, 229, 248, 263,
	267, 262, 283, -40, 82, 34, 505, 508, -354, 226,
	232, 233, 228, 444, 126, 125, 76, -351, 366, 538,
	627, -56, 629, 101, 104, 628, 45, 238, 630, 631,
	632, 545, 633, 247, 634, 635, 636, 637, 643, 586,
	644, 645, 646, 127, 8, -76, -299, -295, 91, -288,
	502, 250, 536, 537, 299, 82, 42, 511, 363, 366,
	538, 473, 627, 311, 325, 319, 478, 479, 480, 346,
	338, 503, 539, 512, 302, 251, 287, 621, 336, 135,
	629, 306, 540, 265, 371, 372, 541, 373, 101, 314,
	410, 642, 305, 542, 640, 104, 628, 80, 472, 52,
	624, 45, 260, 334, 234, 330, 630, 288, 543, 514,
	281, 126, 123, 649, 37, 328, 51, 31, 639, 125,
	50, 631, 150, 544, 632, 545, 375, 353, 615, 49,
	376, 266, 546, 85, 271, 507, 309, 623, 377, 492,
	329, 378, 298, 638, 231, 547, 606, 598, 599, 379,
	380, 616, 358, 354, 359, 494, 548, 402, 477, 381,
	602, 603, 656, 53, 549, 550, 617, 124, 551, 79,
	633, 81, 323, 324, 552, 296, 249, 497, 498, 404,
	350, 455, 462, 463, 111, 112, 458, 113, 464, 114,
	465, 466, 467, 456, 115, 108, 457, 468, 469, 351,
	352, 116, 470, 110, 109, 459, 461, 117, 471, 247,
	36, 382, 504, 300, 59, 304, 275, 405, 47, 356,
	653, 46, 611, 499, 553, 614, 349, 345, 452, 54,
	554, 555, 556, 557, 474, 634, 348, 322, 344, 648,
	4, 293, 475, 635, 63, 233, 361, 360, 362, 282,
	401, 341, 558, 559, 560, 254, 83, 561, 331, 22,
	562, 563, 383, 289, 564, 57, 565, 566, 408, 263,
	567, 55, 636, 40, 568, 268, 650, 637, 569, 570,
	571, 572, 270, 573, 385, 574, 600, 601, 384, 355,
	357, 500, 277, 386, 506, 575, 310, 327, 267, 641,
	576, 255, 488, 489, 490, 491, 622, 496, 495, 269,
	274, 262, 409, 256, 577, 578, 579, 580, 581, 303,
	597, 582, 583, 315, 643, 453, 44, 584, 585, 586,
	587, 588, 297, 292, 403, 412, 62, 84, 368, 589,
	590, 620, 321, 290, 591, 312, 56, 644, 645, 646,
	284, 647, 481, 482, 483, 484, 10, 654, 655, 476,
	388, 127, 294, 295, 48, 342, 276, 592, 307, 593,
	332, 333, 347, 320, 343, 313, 607, 278, 389, 454,
	264, 594, 411, 291, 364, 369, 308, 510, 493, 283,
	390, 619, 509, 485, 486, 340, 337, 285, 487, 595,
	391, 239, 279, 280, 596, 608, 392, 393, 301, 394,
	395, 396, 397, 398, 400, 399, 604, 605, 286, 508,
	318, 335, 370, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 451, 237, -76, 237, -186, -295, 237, -264, 372,
	-285, 374, 387, 382, 392, 380, -276, 383, 385, 277,
	-395, 402, 237, 389, 225, 375, 384, 393, 394, 301,
	400, 395, 399, 286, 396, 397, 398, -378, 177, 632,
	647, 135, 339, 379, 377, 403, 611, 91, -301, 91,
	92, 93, -288, 313, -303, 318, -289, -378, -288, 316,
	-76, -305, -305, -125, 611, 613, -205, -140, 143, -155,
	-158, -146, -150, -199, -200, -201, -202, -156, -215, -254,
	166, 167, 174, 144, -211, -159, 27, 501, 445, 444,
	177, 32, -149, 220, 69, 70, 447, 146, 58, 12,
	420, 421, -157, 415, 422, 417, 472, 474, 475, 476,
	473, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 477, 449, 450, 118, 451, 108, 110, 109, 452,
	453, 454, 336, 499, 500, 494, 497, 498, 496, 495,
	351, 352, 455, 456, 457, 111, 112, 113, 114, 115,
	116, 117, 458, 461, 459, 460, 462, 463, 464, 469,
	470, 465, 466, 467, 468, 471, -85, -97, 527, 526,
	-98, -147, -148, -161, -162, -289, -295, 242, 414, 236,
	172, 443, -151, -144, -213, 107, 92, 93, -8, -209,
	413, 418, 419, 423, 416, 513, 515, 530, 531, 533,
	518, 523, 522, 525, 488, 489, 490, 491, 492, 493,
	598, 599, 600, 601, 602, 603, 604, 605, -378, -288,
	91, -153, -152, -195, 94, 99, 102, 103, 105, -401,
	260, 332, 333, 119, -406, 625, 90, 95, 96, 97,
	98, 120, 121, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 45, 388, 388, -186, -76,
	-76, -76, -76, -225, -123, -227, -10, -8, -406, 9,
	-76, -8, -9, -13, -34, -36, 532, -35, -295, 100,
	-232, -248, 13, 62, 162, 43, 51, -230, -231, -12,
	-8, -140, 20, 24, 25, -128, 168, -140, -295, -128,
	-274, 241, -76, -76, -263, -308, 313, -267, 403, 611,
	402, -255, -265, 91, -254, -264, 401, -348, 159, -334,
	-338, -289, 252, -364, 248, -186, -357, -356, -289, -406,
	-124, -284, 238, 246, 245, 136, -382, 139, 294, 414,
	236, -51, -52, -53, -264, 176, 631, -106, 269, 273,
	88, 88, -338, -337, -336, -383, 273, 252, -363, -355,
	244, 253, -344, 245, 246, -339, 238, 137, -383, -339,
	243, 253, 248, 252, 273, 273, 127, 273, 127, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 268, -345,
	151, -345, 509, 509, -351, -383, 248, 238, -383, -383,
	244, -286, -339, 240, 26, 240, 36, 36, -345, -345,
	-345, -264, 176, -345, -345, -345, -345, 281, 281, -345,
	-345, -345, -345, -345, -345, -345, -345, -345, -345, -345,
	-345, -345, -345, -345, -345, -345, 237, -382, -132, 399,
	301, 82, -54, 283, -37, -186, -284, 238, 239, -382,
	270, -186, 221, -186, -278, 159, 16, -278, -275, 388,
	386, 373, 378, -278, -278, -278, -278, 284, 371, -340,
	238, 36, 249, 388, 284, 371, 284, 285, 284, 285,
	381, 391, 284, -300, 15, 162, 414, 376, 380, 277,
	237, 278, 239, 390, 285, -300, 90, -279, 159, 388,
	280, -278, -278, -306, -406, -291, -289, -287, 230, 24,
	142, 26, 28, 145, 177, 130, 20, 146, 38, 232,
	339, 248, 176, 244, 444, 225, 73, 513, 415, 417,
	413, 420, 446, 447, 414, 374, 32, 14, 515, 29,
	258, 25, 39, 170, 227, 149, 516, 261, 27, 259,
	118, 121, 518, 23, 76, 253, 15, 246, 41, 17,
	519, 520, 18, 242, 241, 162, 238, 71, 12, 220,
	30, 158, 67, 521, 137, 522, 523, 524, 525, 131,
	69, 159, 21, 651, 418, 419, 34, 612, 501, 272,
	172, 74, 60, 613, 143, 416, 526, 527, 119, 528,
	122, 77, 618, 139, 19, 72, 43, 529, 273, 530,
	243, 652, 531, 406, 532, 160, 228, 443, 70, 161,
	625, 533, 626, 236, 387, 9, 448, 33, 257, 245,
	129, 68, 534, 237, 148, 449, 450, 240, 132, 120,
	8, 136, 35, 13, 75, 78, 421, 422, 423, 58,
	128, 505, 147, 16, 535, 407, 141, -378, 614, -306,
	-306, 33, 92, 240, -289, -186, -82, 606, 229, -130,
	388, -118, 177, 632, 615, 616, 617, 614, 385, 622,
	620, 618, 284, 619, 88, 139, 141, 142, 4, -140,
	158, -196, 151, 152, 153, 154, 155, 156, 157, 162,
	143, 145, 159, -241, 140, 163, 164, 165, 166, 167,
	168, 169, 171, 170, 172, 173, 160, 161, 176, 223,
	224, -150, -150, -150, -150, -211, -217, -216, -406, -213,
	-378, -288, -295, -406, -406, -150, -273, -406, -406, -146,
	-406, -406, -406, -220, -140, -406, -406, -410, -406, -410,
	-410, -324, -406, -324, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	221, -406, -406, -406, -406, -406, -324, -324, -324, -324,
	-324, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, 103, 99, 102, 94, -215,
	105, 90, 90, 90, 90, -8, -9, -205, -406, -305,
	-392, -393, -189, -186, -406, 301, -289, -289, 270, -230,
	-12, -8, -225, -231, -227, -8, -76, -116, -129, 64,
	65, -131, 25, 39, 68, 66, 24, -407, 89, -407,
	-248, -407, 88, -36, -251, 87, 560, 590, 560, 590,
	62, 44, 90, 90, 88, 22, -226, -228, -140, 15,
	-293, 4, -292, 26, -289, 90, 221, 15, -187, 30,
	-186, -274, -274, 88, 313, 91, -269, -268, 404, 406,
	151, -294, -289, 90, 32, 89, 88, -186, -313, -316,
	-318, -317, -319, -314, -315, 336, 337, 177, 340, 342,
	343, 344, 345, 346, 347, 348, 349, 350, 353, 33,
	260, 332, 333, 334, 335, 354, 355, 356, 357, 359,
	360, 361, 362, 319, 338, 503, 320, 321, 322, 323,
	324, 325, 327, 328, 329, 330, 331, -379, -378, 87,
	89, 88, -320, 87, -140, -132, 237, -378, 238, 238,
	238, -76, 443, -345, -345, -345, 268, 20, -44, -41,
	-371, 19, -40, -41, 230, 123, 124, 227, 87, -334,
	87, -343, -379, -378, 87, 137, 243, 136, -342, -339,
	-342, -343, -378, -213, -378, 137, 137, -378, -378, -260,
	-289, -260, -260, 24, -260, 24, -260, 24, 96, -289,
	-260, 24, -260, 24, -260, 24, -260, 24, -260, 24,
	32, 79, 80, 81, 32, 83, 84, 85, -213, -378,
	-378, -213, -334, -213, -186, -378, -264, 96, 96, 96,
	-345, -345, 96, 90, 90, 90, -345, -345, 96, 90,
	-297, -295, 90, 90, -384, 254, 298, 300, 96, 96,
	96, 96, 32, 90, -385, 32, 639, 638, 640, 641,
	642, 90, 96, 32, 96, 32, 96, -289, 87, -186,
	-138, 288, 225, 227, 230, 77, 90, 304, 305, 302,
	307, 308, 151, 45, 88, 240, 237, -378, -280, 242,
	-280, -289, -296, -295, -287, 90, -140, -341, 15, 162,
	-300, -300, -278, -186, -341, -300, -278, -186, -278, -278,
	-278, -278, -300, -300, -300, -278, -295, -295, -186, -186,
	-186, -186, -186, -186, -186, -306, -279, -278, 614, 90,
	-272, 15, 77, -306, -306, -304, 316, -78, -289, 90,
	-15, -11, -22, -21, -23, 151, 88, 505, -179, -186,
	614, 614, 614, 614, 614, 614, -140, -140, -140, -140,
	528, -203, 119, 143, 120, 121, -158, -204, -209, -211,
	106, 162, 145, 159, -241, -146, -150, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-307, -289, 90, 177, -154, -153, 105, -401, -154, 502,
	88, -216, 221, -140, -140, -378, -140, -289, -126, -128,
	-126, -140, -218, -219, 147, -213, -140, -407, -407, 96,
	105, 168, -122, 25, 39, -122, -122, -122, -122, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -122,
	-289, -289, -115, -114, 425, 426, 427, 428, 430, 431,
	432, 435, 436, 440, 441, 424, 442, 429, 434, 437,
	438, 439, 433, 335, -140, -140, -140, -140, -140, -140,
	-83, -140, 130, 131, 132, -205, -140, -146, -140, -140,
	-140, -407, -140, -140, -140, -206, -205, -377, -376, -375,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -407, -140, -160, -144, 96, -256, 105,
	92, -140, -140, -127, -126, -291, -296, -287, -288, -126,
	-127, -127, -126, -126, -140, -140, -140, -140, -140, -140,
	-140, -140, -407, -140, -140, -140, -140, -140, -248, -407,
	-205, 88, -394, 406, 407, 612, -298, 273, -297, 26,
	-206, 90, 15, -258, 78, -289, -230, -230, 64, 65,
	60, -126, -131, -407, -35, 26, -250, -289, 553, 553,
	63, 90, -325, -264, 363, 364, 177, -140, -140, 88,
	-229, 28, 29, -186, -292, 168, -296, -186, -259, 273,
	-186, -164, -166, -167, -168, -189, -212, -406, -169, -8,
	524, 521, 15, -179, -180, -188, -295, -267, -308, -269,
	88, 405, 407, 408, 77, 122, -140, -326, 176, -353,
	-352, -351, -334, -336, -337, -338, 89, -326, -330, 369,
	368, -320, -320, -320, -320, -320, -325, -325, -325, -325,
	87, 87, -320, -320, -320, -320, -328, 87, -328, -328,
	-329, 87, -329, -364, -140, -361, -360, -358, -359, 247,
	101, 596, 552, 505, 545, 586, 78, -356, -229, 96,
	-407, -138, -281, 242, -362, -359, -378, -378, -378, -281,
	91, 90, 91, 90, 91, 90, -107, -58, -1, 651,
	652, 653, 88, 20, -335, -334, -57, 298, -367, -368,
	273, -363, -357, -343, 137, -342, -343, -343, -378, 88,
	30, 127, 127, 127, 127, 505, 227, 33, -282, 544,
	143, 596, 552, -334, -57, 240, 240, -307, -307, -307,
	90, 90, -277, 647, -179, -134, 290, 151, 279, 279,
	237, 237, 292, -186, 303, 306, 304, 305, 302, 307,
	308, 24, 24, 24, 24, 24, 291, 293, 295, 281,
	-186, -186, -280, 77, -181, -186, 27, -295, -186, -278,
	-278, -186, -278, -278, -186, -289, 350, 607, 608, 610,
	609, -118, 406, 88, 505, 23, -119, 23, -406, 119,
	120, 121, -204, -146, -150, -146, 142, 261, -406, -213,
	-407, -291, 26, 88, 78, -407, 88, 88, -407, -407,
	88, 15, -221, -219, 149, -140, -407, 88, -407, -407,
	-407, -205, -140, -140, -140, -140, -407, -407, -407, -407,
	-407, -407, -407, -407, -407, -407, -205, 88, 88, 15,
	-311, 26, -407, -407, -407, -407, -407, -220, -407, 15,
	-407, 78, 88, 162, 88, -407, -407, -407, 88, 88,
	-407, -407, 88, 88, -407, 88, 88, 88, -407, 88,
	88, 88, 88, -407, -407, -407, -407, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, -407, -90, 529,
	-407, -407, 88, -407, 88, -407, -406, 221, -407, -407,
	-407, -407, -407, 88, 88, 88, 88, 88, 88, -407,
	-407, -407, 88, 88, -407, 88, -407, 88, -407, -393,
	611, 407, -193, -192, -190, 75, 241, 76, -406, -297,
	-407, -154, -256, -257, -256, -198, -289, 96, 105, -232,
	-163, -165, 15, -131, -211, 89, 88, -325, -236, -242,
	-275, -289, 90, 177, -327, 177, -327, 363, 364, -228,
	221, -194, 16, -197, 33, 58, -11, -406, -406, 33,
	88, -182, -184, -183, -185, 67, 71, 73, 68, 69,
	70, 74, -302, 26, -8, -164, -8, -406, -186, -179,
	-408, 15, 78, -408, 88, 221, -268, -270, 409, 406,
	412, -378, 90, -106, 88, -351, -338, -233, -135, 41,
	-331, 370, -325, 512, -325, -333, 90, -333, 96, 96,
	89, -47, -42, -43, 34, 82, -358, -345, 90, 40,
	-345, -345, -289, 89, -229, -134, -186, 143, 77, -362,
	-362, -362, -295, -2, 650, 656, 137, 87, 373, 19,
	-250, 88, 89, -214, 299, 89, -108, -289, 89, 87,
	-343, -343, -289, -406, 237, 32, 32, 596, 552, 544,
	-57, -214, -213, -378, -326, 649, 648, 89, 239, 297,
	-139, 420, -136, 90, 91, -186, -186, -186, -186, -186,
	230, 227, 396, -402, 309, -402, 282, 240, -179, -186,
	88, -81, 256, 251, -300, -300, 34, -186, 406, 623,
	621, -140, 142, 261, -158, -150, -146, -309, 177, 336,
	260, 334, 330, 350, 341, 368, 332, 369, 329, 328,
	327, -309, -307, -205, -128, -140, -140, 150, -140, 148,
	-140, -407, -407, -407, -407, -407, -225, -140, -140, -140,
	-407, 177, 336, 15, -140, -307, -140, -140, -140, -140,
	-140, -375, -140, -205, -140, -205, -140, -140, -140, -140,
	-140, -376, -376, -376, -376, -376, -205, -205, -205, -205,
	-406, -289, -93, -92, -91, 579, 241, -90, -160, -93,
	-160, -127, -291, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -190, -339, -339, -339, -260, 88, -271,
	23, 15, 58, 58, -163, -194, -164, -131, -289, -239,
	606, -245, 47, -243, -244, 48, -240, 49, 57, -327,
	-327, 168, -230, -140, -261, 77, -262, -266, -213, -208,
	-210, -209, -406, -249, -407, -289, -260, -262, -166, -167,
	-167, -166, -167, 67, 67, 67, 72, 67, 72, 67,
	-183, -295, -407, -140, -298, 78, -164, -164, -188, -295,
	168, 406, 410, 411, -351, -400, 119, 143, 32, 77,
	366, 101, -398, 176, 541, 591, 596, 552, 545, 586,
	-399, 243, 136, 137, 255, 26, 42, 89, 88, 89,
	88, 89, 88, -283, -282, -43, -42, -345, -345, 96,
	-378, 90, 90, 239, 27, -186, 77, 77, 77, -109,
	654, 96, 87, -3, 82, -140, 87, 20, -334, -213,
	-369, -321, -370, -322, -323, -5, -6, -346, -112, 58,
	101, -61, 45, 238, 634, 635, 127, -406, 647, -361,
	-250, -365, -367, -186, -143, -406, -142, -144, -151, 166,
	167, 260, 332, 333, -214, -186, -133, 288, 296, 87,
	-137, 92, -381, 78, 279, 366, 279, 90, -403, 310,
	90, -403, -186, -81, -47, -186, -278, -278, 34, -378,
	-407, -158, -150, -121, 162, 505, -312, 511, -320, -320,
	-320, -329, -320, 324, -320, 324, -320, -407, -407, -407,
	88, -407, 23, -407, -140, 88, -117, 448, 88, 88,
	-407, 87, 87, -140, -407, -407, -407, 88, -407, -407,
	-407, -407, -407, 88, -407, -407, -407, 88, -310, 597,
	-407, -407, -407, -407, -407, -407, -407, -407, -407, -407,
	-89, -290, -289, -90, 561, 561, -407, -90, -222, 88,
	-407, -407, 88, -407, 88, 88, -407, 88, -407, 88,
	-407, -407, -407, -407, 88, -191, 23, -191, -191, -407,
	-256, -186, -194, -223, 17, -236, 52, 342, -247, -246,
	56, 48, -244, 20, 50, 20, 31, -261, 88, 151,
	88, -407, -407, 88, 58, 221, -407, -194, -177, -176,
	77, 78, -178, 77, -176, 67, 67, -251, 88, -259,
	-164, -194, -194, 221, 119, -406, -145, -157, -143, 13,
	90, 90, -378, -397, 638, 639, 32, 96, -345, -345,
	137, 137, -186, 87, -325, 90, -325, 96, 96, 32,
	83, 84, 85, 32, 79, 80, 81, -186, -186, -186,
	-186, -366, 87, 20, -140, 87, 151, 89, -250, -250,
	275, 162, -345, 632, 281, 281, -345, -345, -345, -111,
	-110, 654, 89, -407, 88, -332, 505, 508, -140, -152,
	-152, -251, 89, -374, 505, -380, -289, -289, -289, -289,
	96, 98, -407, 503, 74, 506, -407, -325, -140, -140,
	-140, -230, 90, -140, -140, 96, 96, -407, -140, -205,
	-140, -407, -174, -173, -175, 615, 119, 32, -309, -407,
	-207, 273, -96, -95, -94, 15, -407, -140, -140, -140,
	-140, -140, -140, -140, -406, 67, 19, 17, -406, -406,
	-298, -223, -224, 18, 20, -237, 54, -235, 53, -235,
	-246, 20, 20, 90, 20, 90, 137, -266, -140, -210,
	58, -11, -289, -208, -289, -225, -140, 87, -140, -154,
	-194, -194, -140, -200, 472, 474, 475, 476, 473, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 477,
	451, 108, 110, 109, 452, 453, 454, 336, 499, 500,
	494, 497, 498, 496, 495, 351, 352, 455, 456, 457,
	111, 112, 113, 114, 115, 116, 117, 458, 461, 459,
	462, 463, 464, 469, 470, 465, 466, 467, 468, 471,
	488, 489, 490, 491, 492, 493, 598, 599, 600, 601,
	602, 603, 604, 605, 90, 90, 87, -140, 89, 89,
	-251, -365, -58, 89, -252, -250, 96, 89, 276, -209,
	-406, 90, -345, -345, -345, 96, 96, -297, -407, 88,
	-289, -399, -367, 509, 509, -407, 26, -373, -372, -291,
	87, 78, 63, 504, 507, -407, -407, 88, -407, -407,
	-407, 89, 89, -407, -407, -407, 88, -407, -173, -175,
	-407, 77, -154, -225, 20, -93, 298, 300, -93, -407,
	88, -407, -407, 88, -407, 88, -407, -407, -253, -407,
	-289, 243, 20, 20, -253, -253, -193, -224, -103, -102,
	-101, 535, -140, -205, -238, 55, 77, 122, 90, 90,
	90, 13, -208, 221, -230, -250, -171, 373, -225, -407,
	-250, 89, 26, 89, 656, 137, 89, -209, -120, -406,
	272, -297, 90, 90, -110, -113, -11, 88, 151, -250,
	-186, 63, -140, -205, -407, 77, 516, 615, -88, -87,
	-84, 626, 652, -205, -90, -90, -140, -140, -140, 88,
	-407, -407, -407, -103, 88, -100, -99, -289, 77, 122,
	-262, -289, 89, -407, -406, -230, 89, -234, -11, 87,
	-3, 272, -321, -370, -322, -323, -5, -6, -346, -79,
	505, -372, -350, -295, -291, 90, 96, 89, 505, -407,
	-407, -86, 145, 624, 594, -141, -152, -149, 220, -407,
	88, -407, 88, -407, 88, -289, 243, -101, 88, 26,
	-298, -172, -170, -289, 558, -390, -389, 501, -400, -396,
	119, 143, 101, -398, 596, 552, 128, 129, -79, -140,
	87, -407, -80, 287, 611, 221, -381, 506, -86, 625,
	572, 547, 572, 547, -140, -140, -140, -99, -406, -407,
	88, 23, -313, -60, 569, -387, -388, 77, -391, 379,
	568, 589, 119, 90, 89, -250, 248, -296, -374, 507,
	142, -407, 88, -407, 88, -407, -89, -170, 565, -326,
	-154, -388, 77, -387, 77, 14, 13, -4, 655, 89,
	289, -86, -140, -140, -407, -59, 27, -171, -386, 256,
	251, 254, 33, -386, 96, -4, -407, -407, 569, 250,
	32, 119, -154, -174, -173, -173,
}

var yyDef = [...]int{
	845, -2, -2, 847, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 845, 845, 845, 0, 845, 0, 0, 845, -2,
	-2, 845, 1467, 0, 845, 0, 0, -2, 772, 778,
	0, 780, -2, 0, 0, 845, 2014, 2014, 840, 0,
	0, 0, 0, 0, 845, 845, 845, 845, 1319, 49,
	845, 0, 84, 85, 796, 797, 798, 64, 0, 2012,
	846, 1, 3, 70, 74, 0, 0, 0, 57, 1328,
	0, 77, 0, 0, 849, 0, 0, 1450, 845, 845,
	0, 116, 117, 0, 0, 0, -2, 120, -2, 149,
	150, 151, 0, 156, 586, 509, 561, 507, 546, -2,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 384, 384, 0, 0, -2, 495,
	495, 495, 1452, 0, 0, 0, 543, 446, 384, 384,
	384, 0, 384, 384, 384, 384, 0, 0, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 1346, 155, 1468, 1465, 1466,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 0, 1444, 0, 699, 948, 0, 761, 761,
	0, 761, 761, 761, 761, 0, 0, 0, 711, 0,
	0, 0, 0, 758, 0, 727, 728, 0, 758, 0,
	734, 764, 0, 739, 761, 761, 742, 2015, 0, 2015,
	2015, 1435, 0, 755, 753, 767, 768, 39, 771, 774,
	775, 776, 777, 779, 0, 784, 787, 1461, 1462, 0,
	789, 808, 809, 0, 841, 842, 44, 1096, 0, 970,
	975, 986, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009,
	0, 0, 0, 0, 1014, 1015, 0, 0, 0, 0,
	0, 1077, 1023, 0, 0, 0, 0, 1292, 0, 0,
	1253, 1253, 1111, 1253, 1255, 1255, 1668, 1804, 1812, 1929,
	1631, 1636, 1637, 1638, 1922, 1923, 1924, 1925, 1963, 1964,
	1968, 1728, 0, 0, 0, 2011, 1765, 1773, 1774, 1798,
	1895, 1949, 1648, 1793, 1861, 1725, 1747, 1748, 1877, 1878,
	1769, 1770, 1751, 1763, 1766, 1754, 1755, 1757, 1759, 1764,
	1771, 1777, 1756, 1776, 1775, 0, 1752, 1753, 1758, 1768,
	1772, 1760, 1761, 1762, 1767, 1778, 0, 0, 0, 0,
	0, 1192, 1193, 1194, 1195, 0, 0, 0, 0, 0,
	0, 0, 280, 281, 1305, 1306, 42, 43, 1095, 1422,
	1255, 1255, 1255, 1255, 1255, 1037, 1038, 1039, 1040, 1041,
	1065, 1066, 1072, 1073, 1872, 1873, 1874, 1875, 1709, 1958,
	1717, 1718, 1856, 1857, 1730, 1731, 1986, 1987, -2, -2,
	-2, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	1672, 1940, 1941, 217, 0, 0, 285, 286, 282, 283,
	284, 1079, 1080, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 2014, 0, 818, 0, 0,
	0, 0, 0, 1328, 0, 1320, 1319, 62, 0, 845,
	-2, 0, 0, 0, 0, 46, 0, 51, 905, 848,
	76, 75, 1368, 1371, 0, 0, 0, 58, 1329, 66,
	68, 1330, 0, 850, 851, 0, 881, 885, 0, 0,
	0, 1451, 1450, 1450, 101, 0, 0, 1426, 113, 114,
	115, 0, 0, 1432, 1433, 1437, 1438, 0, 0, 167,
	168, 0, 40, 411, 0, 163, 0, 404, 345, 0,
	1346, 0, 0, 0, 0, 0, 845, 0, 1445, 144,
	145, 152, 153, 154, 384, 384, 384, 558, 0, 0,
	155, 155, 516, 517, 518, 0, 0, -2, 409, 0,
	496, 0, 0, 398, 398, 402, 400, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 0,
	385, 0, 556, 557, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 1453, 1454, 0, 533, 534, 0, 0,
	0, 384, 384, 0, 0, 0, 0, 384, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 1359, 0,
	0, 0, -2, 0, 691, 0, 0, 0, 1446, 1446,
	0, 698, 0, 700, 701, 0, 0, 702, 0, 758,
	758, 756, 757, 704, 705, 706, 707, 761, 0, 0,
	393, 394, 395, 758, 761, 0, 761, 761, 761, 761,
	758, 758, 758, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2015, 764, 761, 0, 735, 0, 736,
	737, 740, 741, 743, 2016, 2017, 1463, 1464, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 2015, 2015, 747,
	751, 1436, 773, 785, 788, 803, 48, 1716, 795, 820,
	821, 826, 0, 0, 0, 0, 832, 833, 834, 0,
	0, 837, 838, 839, 0, 0, 0, 0, 0, 968,
	0, 0, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 987, 988, 0, 0,
	0, 1010, 1011, 1012, 1013, 1016, 0, 1028, 0, 1030,
	1301, -2, 0, 0, 0, 1021, 1022, 0, 0, 0,
	0, 0, 0, 0, 1293, 0, 0, 1109, 0, 1110,
	1112, 1113, 0, 1114, 855, 855, 855, 855, 855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1456, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	0, 0, 865, 865, 0, 0, 210, 211, 212, 213,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 230, 231, 232, 233,
	234, 287, 235, 236, 237, 1095, 0, 0, 0, 45,
	810, 811, 0, 931, 1456, 0, 0, 861, 0, 56,
	65, 67, 1328, 60, 1328, 0, 867, 0, 0, -2,
	-2, 868, 874, 875, 876, 877, 878, 53, 2013, 54,
	0, 73, 0, 47, 0, 0, 1369, 0, 1372, 0,
	0, 0, 357, 1376, 0, 0, 1321, 1322, 1325, 0,
	882, 1810, 886, 0, 888, 889, 0, 0, 99, 0,
	947, 0, 0, 0, 0, 1434, 103, 104, 0, 0,
	0, 368, 1439, 1440, 1441, -2, 391, 0, 368, 352,
	295, 296, 297, 345, 299, 345, 345, 345, 345, 357,
	357, 357, 357, 328, 329, 330, 331, 332, 0, 0,
	314, 345, 345, 345, 345, 335, 336, 337, 338, 339,
	340, 341, 342, 300, 301, 302, 303, 304, 305, 306,
	307, 308, 347, 347, 347, 349, 349, 0, 41, 0,
	372, 0, 1325, 0, 0, 1359, 1448, 1458, 0, 0,
	0, 1448, 122, 0, 0, 0, 559, 597, 510, 547,
	560, 0, 513, 514, -2, 0, 0, 495, 0, 497,
	0, 392, 0, -2, 0, 402, 0, 398, 402, 399,
	402, 390, 403, 537, 538, 539, 0, 541, 542, 627,
	917, 0, 0, 0, 0, 0, 633, 634, 635, 0,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 0,
	0, 0, 497, 0, 544, 0, 0, 448, 449, 450,
	0, 0, 453, 454, 455, 456, 0, 0, 459, 460,
	461, 934, 935, 462, 463, 488, 489, 490, 464, 465,
	466, 467, 468, 469, 470, 482, 483, 484, 485, 486,
	487, 471, 472, 473, 474, 475, 476, 479, 0, 137,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1446, 0, 0, 0,
	0, 864, 949, 1469, 1470, 762, 763, 0, 396, 397,
	761, 761, 708, 748, 0, 761, 712, 749, 713, 715,
	714, 716, 729, 730, 761, 719, 759, 760, 720, 721,
	722, 723, 724, 725, 726, 744, 731, 732, 733, 765,
	0, 769, 770, 745, 746, 0, 786, 806, 804, 805,
	807, 799, 800, 801, 802, 0, 0, 0, 823, 95,
	828, 829, 830, 831, 843, 836, 1097, 965, 966, 967,
	0, 969, 972, 0, 1081, 1083, 974, 976, 1092, 1093,
	1094, 0, 0, 0, 0, 0, 980, 984, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1006, 1269, 1270, 1271, 1025, 288, 289, 0, 1026, 0,
	0, 0, 0, 0, 0, 0, 1096, 1027, 0, 879,
	0, 0, 1299, 1296, 0, 0, 0, 1254, 1256, 0,
	0, 0, 0, 856, 857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1272, 0, 0, 0, 0, 0,
	1292, 0, 1032, 1033, 1034, 0, 0, 0, 0, 0,
	0, 1152, 0, 0, 0, 0, 1457, 0, 132, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 1197, 1198, 1199,
	38, 0, 0, 0, 866, 1303, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1221, 0, 0, 0, 0, 0, 0, 1420,
	0, 0, 813, 814, 816, 0, 951, 0, 932, 0,
	0, 819, 0, 860, 0, 863, 59, 61, 872, 873,
	0, 890, 869, 55, 50, 0, 0, 909, 1370, 1373,
	1374, 357, 1396, 0, 366, 366, 363, 1331, 1332, 0,
	1324, 1326, 1327, 78, 887, 883, 0, 963, 0, 0,
	946, 0, 893, 895, 896, 897, 929, 0, 900, 901,
	0, 0, 0, 0, 0, 97, 948, 1427, 0, 102,
	0, 0, 107, 108, 1428, 1429, 1430, 1431, 0, 586,
	-2, 443, 169, 171, 172, 173, 164, -2, 355, 353,
	354, 298, 357, 357, 322, 323, 324, 325, 326, 327,
	0, 0, 315, 316, 317, 318, 309, 0, 310, 311,
	312, 0, 313, 410, 0, 1333, 373, 374, 376, 384,
	0, 379, 380, 0, 384, 384, 0, 405, 406, 0,
	1325, 1350, 0, 0, 0, 1459, 1458, 1458, 1458, 0,
	157, 158, 159, 160, 161, 162, 622, 0, 0, 598,
	620, 621, 155, 0, 0, 165, 499, 498, 0, 654,
	0, 408, 0, 0, 402, 402, 387, 388, 540, 0,
	0, 629, 630, 631, 632, 0, 0, 0, 526, 437,
	0, 527, 528, 497, 499, 0, 0, 368, 451, 452,
	457, 458, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 575, 578, 580, 501,
	584, 577, 579, 581, 501, 585, 1347, 1348, 1349, 0,
	0, 692, 0, 0, 434, 93, 1447, 697, 758, 718,
	750, 758, 710, 717, 738, 782, 790, 791, 792, 793,
	794, 827, 0, 0, 0, 0, 835, 0, 0, 973,
	1082, 1084, 977, 0, 981, 985, 0, 0, 0, 1031,
	1029, 1303, 0, 0, 0, 1078, 0, 0, 1100, 1101,
	0, 0, 0, 1297, 0, 0, 1107, 0, 1257, 1258,
	1115, 0, 0, 0, 0, 0, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1319, 0, 0, 0,
	0, 0, 1136, 1137, 1138, 1139, 1140, 0, 1142, 0,
	1143, 0, 0, 0, 0, 1150, 1151, 1153, 0, 0,
	1156, 1157, 0, 0, 1158, 0, 0, 0, 1162, 0,
	0, 0, 0, 1171, 1172, 1173, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1185, 1186, 0,
	1060, 0, 0, 1060, 0, 1098, 865, 0, 1259, 1260,
	1261, 1262, 1263, 0, 0, 0, 0, 0, 0, 1219,
	1220, 1222, 0, 0, 1225, 0, 1227, 0, 1421, 812,
	815, 817, 903, 952, 953, 0, 0, 0, 0, 933,
	1455, 858, 859, 862, 911, 0, 1307, 0, 0, 890,
	963, 891, 0, 870, 52, 906, 0, 1378, 1377, 1390,
	1403, 366, 366, 360, 361, 367, 362, 364, 365, 1323,
	0, 1328, 0, 1414, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 936, 0, 0, 939, 0,
	0, 0, 0, 930, 901, 0, 902, 0, -2, 0,
	0, 91, 92, 0, 0, 0, 105, 106, 0, 0,
	112, 369, 370, 146, 155, 445, 170, 418, 0, 0,
	294, 356, 319, 320, 321, 0, 343, 0, 0, 0,
	439, 118, 1337, 1336, 384, 384, 375, 0, 378, 0,
	0, 0, 1460, 346, 407, 0, 136, 0, 0, 0,
	0, 0, 142, 592, 0, 0, 599, 0, 0, 0,
	508, 0, 519, 520, 0, 626, -2, 688, 372, 0,
	386, 389, 918, 0, 0, 521, 0, 524, 525, 438,
	499, 530, 531, 545, 532, 480, 481, 478, 0, 0,
	1360, 1361, 1366, 1364, 1365, 123, 566, 568, 567, 571,
	0, 0, 0, 503, 0, 503, 564, 0, 434, 1333,
	0, 696, 435, 436, 761, 761, 822, 96, 0, 825,
	0, 0, 0, 0, 978, 982, 1264, 1290, 345, 345,
	1277, 345, 349, 1280, 345, 1282, 345, 1285, 345, 1288,
	1289, 0, 0, 0, 880, 0, 0, 1106, 1300, 0,
	0, 1116, 1117, 1118, 1119, 1120, 1294, 0, 0, 0,
	1135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 0, 0, 0, 0, 0, 0, 1230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1055, 1059, 0, 1061, 1062, 0, 0, 1188, 0, 0,
	1200, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 954, 959, 959, 959, 0, 0, 0,
	1442, 1443, 1308, 1309, 963, 1310, 892, 871, 910, 1396,
	0, 1389, 0, -2, 1398, 0, 0, 0, 1404, 358,
	359, 884, 79, 964, 82, 0, 1414, 1423, 0, 1405,
	1416, 1418, 0, 0, 0, 1410, 0, 963, 894, 925,
	927, 0, 922, 937, 938, 940, 0, 942, 0, 944,
	945, 905, 899, 0, 99, 0, 963, 963, 98, 0,
	950, 109, 110, 111, 444, 174, 179, 0, 0, 0,
	184, 0, 186, 0, 0, 0, 191, 192, 384, 384,
	419, 0, 291, 293, 0, 0, 177, 357, 0, 357,
	0, 350, 0, 420, 440, 1334, 1335, 0, 0, 377,
	381, 382, 383, 0, 1449, 138, 0, 0, 0, 595,
	0, 623, 0, 0, 0, 0, 0, 0, 166, 500,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 0,
	384, 0, 0, 0, 384, 384, 384, 0, 680, 371,
	0, 0, 651, 648, 522, 0, 215, 216, 218, 0,
	0, 0, 0, 0, 529, 905, 1351, 1352, 1353, 0,
	1363, 1367, 126, 0, 0, 0, 0, 576, 582, 0,
	502, 583, 693, 694, 695, 94, 703, 709, 824, 844,
	971, 979, 983, 0, 0, 0, 0, 1291, 1275, 357,
	1278, 1279, 1281, 1283, 1284, 1286, 1287, 1019, 1020, 1024,
	0, 1103, 0, 1105, 1298, 0, 1328, 0, 0, 0,
	1134, 0, 0, 0, 1145, 1144, 1146, 0, 1148, 1149,
	1154, 1155, 1159, 0, 1161, 1163, 1164, 0, 0, 0,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	0, 1053, 1056, 1187, 1063, 1064, 1069, 1190, 0, 0,
	1099, 1202, 0, 1207, 0, 0, 1213, 0, 1217, 0,
	1223, 1224, 1226, 1228, 0, 0, 0, 0, 0, 931,
	912, 63, 1310, 1312, 0, 1383, 1381, 1381, 1391, 1392,
	0, 0, 1399, 0, 0, 0, 0, 83, 0, 0,
	0, 1419, 0, 0, 0, 0, 100, 1319, 919, 926,
	0, 0, 920, 0, 921, 941, 943, 898, 0, 963,
	963, 89, 90, 0, 180, 0, 182, 208, 209, 0,
	185, 187, 188, 189, 195, 196, 197, 190, 0, 0,
	290, 292, 0, 0, 333, 344, 334, 0, 0, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 905, 139, 140,
	141, 587, 0, 597, 0, 907, 0, 590, 0, 511,
	0, 0, 0, 384, 384, 384, 0, 0, 0, 0,
	665, 0, 0, 628, 0, 636, 0, 0, 0, 219,
	220, 0, 1362, 565, 0, 124, 125, 0, 0, 570,
	504, 505, 1017, 0, 0, 0, 1018, 1276, 0, 0,
	0, 0, 1295, 0, 0, 0, 0, 1141, 0, 0,
	0, 1167, 0, 0, 0, 617, 618, 0, 1231, 1058,
	1319, 0, 1060, 1070, 1071, 0, 1060, 1201, 0, 0,
	0, 0, 0, 0, 0, 960, 0, 0, 0, 0,
	951, 1312, 1317, 0, 0, 1386, 0, 1379, 1382, 1380,
	1393, 0, 0, 1400, 0, 1402, 0, 1424, 1425, 1417,
	0, 1409, 1412, 1408, 1411, 1328, 923, 0, 928, 0,
	1319, 88, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 0, 0, 348, 351,
	0, 0, 0, 588, 0, 908, 600, 591, 0, 678,
	0, 682, 0, 0, 0, 685, 686, 687, 664, 0,
	668, 412, 652, 649, 650, 523, 0, 127, 128, 0,
	0, 0, 1265, 0, 1268, 1102, 1104, 0, 1131, 1132,
	1133, 1273, 1274, 1147, 1160, 1165, 0, 1168, 0, 0,
	1169, 0, 619, 1049, 0, 0, 1067, 1068, 0, 1203,
	0, 1208, 1209, 0, 1214, 0, 1218, 1229, 0, 956,
	913, 914, 961, 962, 0, 0, 904, 1317, 81, 1318,
	1315, 0, 1313, 1311, 1375, 0, 1384, 1385, 1394, 1395,
	1401, 0, 1407, 0, 86, 0, 0, 0, 1328, 181,
	0, 200, 0, 596, 0, 599, 589, 676, 677, 0,
	689, 681, 683, 684, 666, -2, 1354, 0, 0, 0,
	572, 1266, 0, 0, 1170, 0, 615, 616, 1057, 1050,
	0, 1035, 1036, 1054, 1189, 1191, 0, 0, 0, 0,
	955, 957, 958, 80, 0, 1314, 1075, 0, 1387, 1388,
	1415, 1413, 924, 931, 0, 87, 425, 418, 1354, 0,
	0, 0, 669, 670, 671, 672, 673, 674, 675, 562,
	1356, 129, 130, 0, 492, 493, 494, 123, 0, 1108,
	1166, 1051, 0, 0, 0, 0, 1047, 1048, 0, 1204,
	0, 1210, 0, 1215, 0, 915, 916, 1316, 0, 0,
	601, 0, 603, 0, -2, 413, 426, 0, 175, 201,
	202, 0, 0, 205, 206, 207, 198, 199, 119, 0,
	0, 690, 0, 1357, 1358, 0, 126, 0, 0, 1042,
	1043, 1044, 1045, 1046, 0, 0, 0, 1076, 1055, 602,
	0, 0, 368, 0, 612, 414, 415, 0, 421, 422,
	423, 424, 203, 204, 624, 0, 0, 491, 569, 1267,
	0, 1205, 0, 1211, 0, 1216, 0, 604, 605, 613,
	0, 416, 0, 417, 0, 0, 0, 593, 0, 624,
	1355, 1052, 0, 0, 1074, 0, 614, 610, 427, 429,
	430, 0, 0, 428, 625, 594, 1206, 1212, 0, 431,
	432, 433, 606, 607, 608, 609,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 657,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:586
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:599
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:600
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:604
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:640
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:646
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:657
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:661
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:667
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:671
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:677
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:683
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:689
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:693
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:702
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:708
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:712
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:718
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:843
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:852
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:871
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:885
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:889
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:895
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:919
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:923
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:939
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:947
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:952
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:953
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:957
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:961
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:967
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:971
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:977
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:981
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:986
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:990
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:996
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1002
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1006
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1012
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1016
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1022
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1026
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1030
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1036
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1040
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1044
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1048
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1054
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1058
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1062
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1068
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1074
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1081
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1090
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1094
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1101
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1105
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1110
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1125
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1130
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1136
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1156
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1162
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1178
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1185
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1192
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1197
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1202
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1207
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1214
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1221
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1232
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1243
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1249
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1253
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1257
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1265
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1269
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1279
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1285
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1289
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1295
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1299
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1305
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1309
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1315
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1319
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1325
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1329
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1335
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1340
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1349
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1373
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1382
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1391
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1395
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1408
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1414
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1420
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1425
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1435
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1440
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1454
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1468
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1474
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1490
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1494
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1498
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1504
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1508
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1528
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1544
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1550
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1565
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1573
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1577
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1581
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1591
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1598
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1608
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1612
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1616
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1645
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = Armscii8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = ASCIIStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = Big5Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = UBinaryStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = Cp1250Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = Cp1251Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = Cp1256Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = Cp1257Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = Cp850Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = Cp852Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Cp866Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = Cp932Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = Dec8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = EucjpmsStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = EuckrStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Gb18030Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = Gb2312Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = GbkStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = Geostd8Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = GreekStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = HebrewStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Hp8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Keybcs2Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Koi8rStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Koi8uStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Latin1Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Latin2Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Latin5Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Latin7Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = MacceStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = MacromanStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = SjisStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Swe7Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Tis620Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = Ucs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = UjisStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = Utf16Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Utf16leStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Utf32Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Utf8Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Utf8mb4Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Utf8Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1854
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1858
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1862
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1868
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1872
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1876
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1882
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1886
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1893
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1897
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1901
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1905
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2029
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2133
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2142
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2147
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2151
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2159
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2169
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2181
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2185
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2190
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2194
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2215
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2220
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2241
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2245
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2264
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2273
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2279
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2283
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2289
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2293
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2298
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2302
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2306
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2310
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2314
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2318
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2334
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2338
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2342
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2346
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2350
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = yyDollar[2].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2369
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2383
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2388
		{
			yyVAL.str = "key"
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.str = yyDollar[1].str
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2417
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2427
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2431
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2437
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2441
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2447
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2451
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2457
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2463
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2467
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2471
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2475
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2479
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2488
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2494
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2500
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2506
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2510
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2514
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2519
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2523
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2529
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2535
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2541
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2545
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2549
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2553
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2557
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2562
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2576
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2585
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2589
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2598
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2604
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2618
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2622
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2664
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2668
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2672
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2676
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2680
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2684
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2696
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2704
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2708
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2712
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2716
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2720
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2724
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2753
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2803
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2807
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2816
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2821
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2825
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2834
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2838
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2847
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2851
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2855
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2863
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2869
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2873
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2887
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2899
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2924
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3011
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3021
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3029
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3063
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3077
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3136
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3140
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3144
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3224
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3278
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3287
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3295
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3304
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3311
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3323
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3332
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3347
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3361
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3365
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3371
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3377
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3383
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3387
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3393
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3397
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3403
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3409
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3415
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3421
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3427
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3435
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3445
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3451
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3457
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3461
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3465
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3471
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3475
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3480
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3484
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3489
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3493
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3499
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3503
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3507
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3511
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3515
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3519
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3523
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3527
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3531
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3535
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3539
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3543
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3547
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3551
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3555
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3559
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3563
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3567
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3571
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3575
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3579
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3583
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3592
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3596
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3602
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3612
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3617
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3621
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3626
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3631
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3636
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3641
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3646
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3652
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3658
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3663
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3669
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3675
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3685
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3690
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3694
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3699
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3704
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3709
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3714
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3720
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3726
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3733
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3740
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3747
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3755
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3759
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3765
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3771
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3777
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3783
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3789
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3795
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3801
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3807
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = ""
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3829
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3833
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 694:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3910
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3914
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3918
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4002
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4006
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4010
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4014
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4018
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4022
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4026
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4030
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4034
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = ""
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = "extended "
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4097
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4101
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4117
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4121
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4125
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4135
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4139
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4145
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4149
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4155
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4238
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4260
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4264
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4268
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4272
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4276
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4280
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4284
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = yyDollar[1].str
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = yyDollar[1].str
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = yyDollar[1].str
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4304
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4308
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = ""
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4339
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4345
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4349
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4355
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4361
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4371
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4377
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4381
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4385
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4389
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4407
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4411
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4423
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4437
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4455
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4459
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4475
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4492
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4496
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			setAllowComments(yylex, true)
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4518
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.strs = nil
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4528
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4534
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4538
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4542
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = SQLCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4560
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4564
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4568
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4588
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4597
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4603
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4607
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4616
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4621
		{
			yyVAL.strs = nil
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4633
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4637
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = SQLCacheStr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = DistinctStr
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = DistinctStr
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = StraightJoinHint
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4673
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4677
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4683
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4687
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4691
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4695
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4704
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4708
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4720
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4724
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4730
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4736
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4740
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4750
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4754
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4758
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4762
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4768
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4772
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4778
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4782
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4791
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4800
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4806
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4810
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4816
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4826
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4830
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4834
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4838
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4844
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4848
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4861
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4865
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4869
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4873
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4879
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4881
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4885
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4891
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4893
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4896
		{
			yyVAL.empty = struct{}{}
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4898
		{
			yyVAL.empty = struct{}{}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4901
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4905
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4909
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4922
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4926
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4930
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4936
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4942
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4946
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4950
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4954
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4960
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4964
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4974
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4978
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4988
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5003
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5009
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5013
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5019
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5023
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5027
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5031
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5036
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5040
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5044
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5048
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5065
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5077
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5081
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5085
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5216
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5338
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5342
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5348
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5352
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5358
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5362
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5366
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5372
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5376
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5383
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5387
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5391
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5395
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5399
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5405
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5409
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5413
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5417
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5421
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5440
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5446
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5450
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5459
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5464
		{
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5473
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5479
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5483
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5495
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5501
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5505
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5511
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5515
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5521
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5525
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5537
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5543
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5547
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5553
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5559
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5569
		{
			yyVAL.str = ""
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5579
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5583
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5590
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5594
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5598
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5602
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5608
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5612
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5616
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5620
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5624
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5628
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5632
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5638
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5642
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5646
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5653
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5659
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5663
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5673
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5699
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5703
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5719
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5797
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5801
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5805
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5809
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5829
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5841
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5857
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5865
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6115
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6225
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6231
		{
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6233
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6237
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6241
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6245
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6249
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6253
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6257
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6261
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6265
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6269
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6273
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6279
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6283
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6287
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6291
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6295
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6299
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6303
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6307
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6311
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6366
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6370
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6374
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6378
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6382
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6388
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6392
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6396
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6406
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6410
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6416
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6420
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6424
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6428
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6432
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6438
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6442
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6446
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6450
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6454
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6458
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6462
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6466
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6470
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6474
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6480
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6498
		{
			yyVAL.str = string("")
		}
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6502
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6508
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6512
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6518
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6533
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6537
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6541
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6545
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6584
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6599
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6605
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6609
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6618
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6627
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6633
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6639
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6643
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6649
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6654
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6658
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6662
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6671
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6677
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6681
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6685
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6694
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6698
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6702
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6706
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6713
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6717
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6721
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6725
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6731
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6735
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6739
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6743
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6748
		{
			yyVAL.str = ""
		}
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6752
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6756
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6760
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6765
		{
			yyVAL.str = ""
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6769
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6775
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6779
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6784
		{
			yyVAL.str = ""
		}
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6788
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6793
		{
			yyVAL.str = "cascaded"
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6797
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6801
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6810
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6816
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6822
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6828
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6837
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6841
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6846
		{
			yyVAL.str = ""
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6850
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6856
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6860
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6864
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6868
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6872
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6876
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6880
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6886
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6890
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6894
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6899
		{
			yyVAL.str = ""
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6903
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6907
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6912
		{
			yyVAL.str = ""
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6916
		{
			yyVAL.str = " header"
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6921
		{
			yyVAL.str = ""
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6925
		{
			yyVAL.str = " manifest on"
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6929
		{
			yyVAL.str = " manifest off"
		}
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6934
		{
			yyVAL.str = ""
		}
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6938
		{
			yyVAL.str = " overwrite on"
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6942
		{
			yyVAL.str = " overwrite off"
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6948
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6953
		{
			yyVAL.str = ""
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6957
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6963
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6967
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6973
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6977
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6982
		{
			yyVAL.str = ""
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6986
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6992
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6996
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7002
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7006
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7010
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7015
		{
			yyVAL.str = ""
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7019
		{
			yyVAL.str = " optionally"
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7032
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7036
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7040
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7044
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7048
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7054
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7058
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7062
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7066
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7075
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7081
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7085
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7091
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7095
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7101
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7105
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7110
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7120
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7124
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7130
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7136
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7140
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7146
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7150
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7154
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7158
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7164
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7168
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7172
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7179
		{
			yyVAL.str = "charset"
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7189
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7193
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7197
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7206
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7208
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7211
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7213
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7216
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7221
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7223
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7226
		{
			yyVAL.empty = struct{}{}
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7228
		{
			yyVAL.empty = struct{}{}
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7230
		{
			yyVAL.empty = struct{}{}
		}
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7234
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7243
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7250
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7254
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7260
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7264
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7271
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7277
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7281
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7287
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7291
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7298
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7866
		{
		}
	case 2013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7871
		{
		}
	case 2014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7875
		{
			skipToEnd(yylex)
		}
	case 2015:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7880
		{
			skipToEnd(yylex)
		}
	case 2016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7884
		{
			skipToEnd(yylex)
		}
	case 2017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7888
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
